{"version":3,"file":"js/about.b415f7d5.js","mappings":"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","sources":["webpack://menglish/./src/views/AboutView.vue?d0ed","webpack://menglish/./src/views/AboutView.vue","webpack://menglish/./node_modules/vue-composable/dist/vue-composable.esm-bundler.js","webpack://menglish/./node_modules/axios/lib/helpers/bind.js","webpack://menglish/./node_modules/axios/lib/utils.js","webpack://menglish/./node_modules/axios/lib/core/AxiosError.js","webpack://menglish/./node_modules/axios/lib/helpers/null.js","webpack://menglish/./node_modules/axios/lib/helpers/toFormData.js","webpack://menglish/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js","webpack://menglish/./node_modules/axios/lib/helpers/buildURL.js","webpack://menglish/./node_modules/axios/lib/core/InterceptorManager.js","webpack://menglish/./node_modules/axios/lib/defaults/transitional.js","webpack://menglish/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://menglish/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://menglish/./node_modules/axios/lib/platform/browser/classes/Blob.js","webpack://menglish/./node_modules/axios/lib/platform/browser/index.js","webpack://menglish/./node_modules/axios/lib/platform/common/utils.js","webpack://menglish/./node_modules/axios/lib/platform/index.js","webpack://menglish/./node_modules/axios/lib/helpers/toURLEncodedForm.js","webpack://menglish/./node_modules/axios/lib/helpers/formDataToJSON.js","webpack://menglish/./node_modules/axios/lib/defaults/index.js","webpack://menglish/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://menglish/./node_modules/axios/lib/core/AxiosHeaders.js","webpack://menglish/./node_modules/axios/lib/core/transformData.js","webpack://menglish/./node_modules/axios/lib/cancel/isCancel.js","webpack://menglish/./node_modules/axios/lib/cancel/CanceledError.js","webpack://menglish/./node_modules/axios/lib/core/settle.js","webpack://menglish/./node_modules/axios/lib/helpers/cookies.js","webpack://menglish/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://menglish/./node_modules/axios/lib/helpers/combineURLs.js","webpack://menglish/./node_modules/axios/lib/core/buildFullPath.js","webpack://menglish/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://menglish/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://menglish/./node_modules/axios/lib/helpers/speedometer.js","webpack://menglish/./node_modules/axios/lib/adapters/xhr.js","webpack://menglish/./node_modules/axios/lib/adapters/adapters.js","webpack://menglish/./node_modules/axios/lib/core/dispatchRequest.js","webpack://menglish/./node_modules/axios/lib/core/mergeConfig.js","webpack://menglish/./node_modules/axios/lib/env/data.js","webpack://menglish/./node_modules/axios/lib/helpers/validator.js","webpack://menglish/./node_modules/axios/lib/core/Axios.js","webpack://menglish/./node_modules/axios/lib/cancel/CancelToken.js","webpack://menglish/./node_modules/axios/lib/helpers/spread.js","webpack://menglish/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://menglish/./node_modules/axios/lib/helpers/HttpStatusCode.js","webpack://menglish/./node_modules/axios/lib/axios.js","webpack://menglish/./src/services/Api.ts","webpack://menglish/./src/services/PostServices.ts","webpack://menglish/./src/views/AboutView.vue?d56f","webpack://menglish/./node_modules/core-js/internals/validate-arguments-length.js","webpack://menglish/./node_modules/core-js/modules/web.url-search-params.delete.js","webpack://menglish/./node_modules/core-js/modules/web.url-search-params.has.js","webpack://menglish/./node_modules/core-js/modules/web.url-search-params.size.js"],"sourcesContent":["import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"about\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"This is an about page\", -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_BackButton = _resolveComponent(\"BackButton\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createVNode(_component_BackButton),\n    _createTextVNode(\" \" + _toDisplayString(_ctx.result), 1)\n  ]))\n}","<template>\n  <div class=\"about\">\n    <h1>This is an about page</h1>\n    <BackButton />\n     {{ result }}\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { usePromise } from \"vue-composable\";\nimport PostService from \"@/services/PostServices\";\nimport BackButton from \"@/UI/BackButton.vue\";\n\nexport default defineComponent({\n  setup() {\n\n    const {promise,result} = usePromise(()=>PostService.getAll());\n    //promise.exec();\n    var posts = PostService.getAll();\n    console.log(promise);\n    console.log(result);\n    return { posts,result };\n  },\n  components:{\n    BackButton\n  }\n});\n</script>\n\n<style scoped></style>\n","import { isRef, ref, watch, onMounted, toRaw, getCurrentInstance, onUnmounted, computed, inject, reactive, unref, onActivated, onDeactivated, onBeforeUnmount, customRef, provide, watchEffect, readonly } from 'vue';\n\nfunction unwrap(o) {\r\n    return isRef(o) ? o.value : o;\r\n    // return unref(o) as T;\r\n}\r\nfunction wrap(o) {\r\n    return isRef(o) ? o : ref(o); // NOTE in v3 this is not necessary\r\n}\r\nconst isArray = Array.isArray;\r\nconst isFunction = (val) => typeof val === \"function\";\r\nconst isString = (val) => typeof val === \"string\";\r\nconst isSymbol = (val) => typeof val === \"symbol\";\r\nconst isBoolean = (val) => typeof val === \"boolean\";\r\nconst isUndefined = (val) => typeof val === \"undefined\";\r\nconst isNull = (val) => val === null;\r\nconst isDate = (val) => isObject(val) && isFunction(val.getTime);\r\nconst isNumber = (val) => typeof val === \"number\";\r\nconst isObject = (val) => val !== null && typeof val === \"object\";\r\nconst isElement = (val) => isObject(val) && !!val.tagName;\r\nfunction isPromise(val) {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n}\r\nconst NO_OP = () => { };\r\nconst FALSE_OP = () => false;\r\nconst PASSIVE_EV = { passive: true };\r\nfunction promisedTimeout(timeout) {\r\n    return new Promise((res) => {\r\n        setTimeout(res, timeout);\r\n    });\r\n}\r\n// https://v8.dev/blog/react-cliff\r\nconst MAX_ARRAY_SIZE = 2 ** 32 - 2;\r\nfunction minMax(val, min, max) {\r\n    if (val < min)\r\n        return min;\r\n    if (val > max)\r\n        return max;\r\n    return val;\r\n}\r\nconst isClient = typeof window != \"undefined\";\r\nfunction deepClone(result, ...sources) {\r\n    for (let i = 0; i < sources.length; i++) {\r\n        const source = sources[i];\r\n        if (source === undefined || !isObject(source))\r\n            continue;\r\n        const keys = Object.keys(source);\r\n        for (let j = 0; j < keys.length; j++) {\r\n            const k = keys[j];\r\n            const v = unwrap(source[k]);\r\n            const sourceType = typeof v;\r\n            const type = typeof result[k];\r\n            if (result[k] === undefined || sourceType === type) {\r\n                result[k] = isObject(v)\r\n                    ? deepClone(result[k] || {}, v)\r\n                    : source[k]; // source[k] is assigned because if is ref we want to override to this ref\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n// compact version: https://stackoverflow.com/a/33146982/1209882\r\n/**\r\n * returns a random string\r\n * @param len length of the string max: 36\r\n */\r\n// export function randomString(len: number) {\r\n//   return (+new Date).toString(36).slice(-len);\r\n// }\n\nfunction useEvent(el, name, listener, options) {\r\n    let remove = NO_OP;\r\n    if (el) {\r\n        const element = wrap(el);\r\n        const removeEventListener = (e) => e.removeEventListener(name, listener);\r\n        const addEventListener = (e) => e.addEventListener(name, listener, options);\r\n        const removeWatch = watch(element, (n, _, cleanUp) => {\r\n            if (n) {\r\n                addEventListener(n);\r\n                cleanUp(() => removeEventListener(n));\r\n            }\r\n        }, { immediate: true });\r\n        remove = () => {\r\n            removeEventListener(element.value);\r\n            removeWatch();\r\n        };\r\n    }\r\n    return remove;\r\n}\n\n/**\r\n * Create `debounced` function, options object can be changed after creation to update behaviour\r\n * @param handler - function to be debounced\r\n * @param wait - debounce ms\r\n * @param options - debounce options\r\n */\r\nfunction useDebounce(handler, wait, options) {\r\n    return debounce(handler, wait, options);\r\n}\r\nfunction debounce(func, waitMilliseconds = 50, options = {\r\n    isImmediate: false\r\n}) {\r\n    let timeoutId;\r\n    return function (...args) {\r\n        const context = this;\r\n        const doLater = function () {\r\n            timeoutId = undefined;\r\n            if (!options.isImmediate) {\r\n                func.apply(context, args);\r\n            }\r\n        };\r\n        const shouldCallNow = options.isImmediate && timeoutId === undefined;\r\n        if (timeoutId !== undefined) {\r\n            clearTimeout(timeoutId);\r\n        }\r\n        timeoutId = setTimeout(doLater, waitMilliseconds);\r\n        if (shouldCallNow) {\r\n            func.apply(context, args);\r\n        }\r\n    };\r\n}\n\nfunction useOnMouseMove(el, options, wait) {\r\n    const mouseX = ref(0);\r\n    const mouseY = ref(0);\r\n    const pageX = ref(0);\r\n    const pageY = ref(0);\r\n    let handler = (ev) => {\r\n        mouseX.value = ev.x;\r\n        mouseY.value = ev.y;\r\n        pageX.value = ev.pageX;\r\n        pageY.value = ev.pageY;\r\n    };\r\n    const [eventOptions, ms] = isNumber(options)\r\n        ? [undefined, options]\r\n        : [options, wait];\r\n    if (ms) {\r\n        handler = useDebounce(handler, wait);\r\n    }\r\n    const remove = useEvent(el, \"mousemove\", handler, eventOptions);\r\n    return {\r\n        mouseX,\r\n        mouseY,\r\n        pageX,\r\n        pageY,\r\n        remove,\r\n    };\r\n}\n\nfunction useOnResize(el, options, wait) {\r\n    const element = wrap(el);\r\n    const height = ref(element.value && element.value.clientHeight);\r\n    const width = ref(element.value && element.value.clientWidth);\r\n    let handler = () => {\r\n        height.value = element.value.clientHeight;\r\n        width.value = element.value.clientWidth;\r\n    };\r\n    const [eventOptions, ms] = isNumber(options)\r\n        ? [undefined, options]\r\n        : [options, wait];\r\n    if (ms) {\r\n        handler = useDebounce(handler, wait);\r\n    }\r\n    // resize seems only to be fired against the window\r\n    const remove = isClient\r\n        ? useEvent(window, \"resize\", handler, eventOptions || PASSIVE_EV)\r\n        : /* istanbul ignore next */ NO_OP;\r\n    if (isRef(el) && !el.value) {\r\n        onMounted(handler);\r\n    }\r\n    return {\r\n        height,\r\n        width,\r\n        remove\r\n    };\r\n}\n\nconst SCROLL_METHODS = [\"scrollBy\", \"scrollTo\", \"scrollIntoView\"];\r\nfunction useOnScroll(el, options, wait) {\r\n    const isValidElement = (el) => isNumber(el) || isBoolean(el) || !(isElement(el) || isRef(el)) || !el\r\n        ? false\r\n        : true;\r\n    const element = isValidElement(el)\r\n        ? wrap(el)\r\n        : ref((isClient && window) || undefined);\r\n    const scrollableElement = isValidElement(el)\r\n        ? element\r\n        : ref((isClient && window.document.scrollingElement) || undefined);\r\n    const scrollTop = ref((scrollableElement.value && scrollableElement.value.scrollTop) || 0);\r\n    const scrollLeft = ref((scrollableElement.value && scrollableElement.value.scrollLeft) || 0);\r\n    let handler = () => {\r\n        scrollTop.value = scrollableElement.value.scrollTop;\r\n        scrollLeft.value = scrollableElement.value.scrollLeft;\r\n    };\r\n    const methods = SCROLL_METHODS.reduce((p, c) => {\r\n        //@ts-ignore\r\n        p[c] = (...args) => \r\n        //@ts-ignore\r\n        scrollableElement.value &&\r\n            //@ts-ignore\r\n            scrollableElement.value[c] &&\r\n            //@ts-ignore\r\n            scrollableElement.value[c].apply(scrollableElement.value, args);\r\n        return p;\r\n    }, {});\r\n    const scrollTopTo = (top) => methods.scrollTo({ top });\r\n    const scrollLeftTo = (left) => methods.scrollTo({ left });\r\n    const [eventOptions, ms] = isNumber(el) || !el\r\n        ? [PASSIVE_EV, el]\r\n        : isNumber(options)\r\n            ? [PASSIVE_EV, options]\r\n            : [options, wait];\r\n    if (ms) {\r\n        handler = useDebounce(handler, wait);\r\n    }\r\n    const eventRemove = useEvent(element, \"scroll\", handler, eventOptions);\r\n    const watchRemoveTop = watch(scrollTop, scrollTopTo, { immediate: false });\r\n    const watchRemoveLeft = watch(scrollLeft, scrollLeftTo, { immediate: false });\r\n    const remove = () => {\r\n        eventRemove();\r\n        watchRemoveLeft();\r\n        watchRemoveTop();\r\n    };\r\n    return {\r\n        scrollTop,\r\n        scrollLeft,\r\n        remove,\r\n        scrollTopTo,\r\n        scrollLeftTo,\r\n        ...methods,\r\n    };\r\n}\n\nconst events = [\"mousedown\", \"touchstart\"];\r\nfunction useOnOutsidePress(el, onOutsidePressCallback) {\r\n    if (!isClient) {\r\n        return () => { };\r\n    }\r\n    const element = wrap(el);\r\n    const handler = (e) => element.value &&\r\n        !element.value.contains(e.target) &&\r\n        onOutsidePressCallback(e);\r\n    const event = events.find(x => `on${x}` in document.documentElement);\r\n    return useEvent(document, event, handler, { passive: true });\r\n}\n\nfunction usePromise(fn, lazyOptions) {\r\n    if (!fn) {\r\n        throw new Error(`[usePromise] argument can't be '${fn}'`);\r\n    }\r\n    if (typeof fn !== \"function\") {\r\n        throw new Error(`[usePromise] expects function, but received ${typeof fn}`);\r\n    }\r\n    const [lazy, throwException] = isBoolean(lazyOptions)\r\n        ? [lazyOptions, false]\r\n        : isObject(lazyOptions)\r\n            ? [lazyOptions.lazy, lazyOptions.throwException]\r\n            : [false, false];\r\n    const loading = ref(false);\r\n    const error = ref(null);\r\n    const result = ref(null);\r\n    const promise = ref();\r\n    const exec = async (...args) => {\r\n        loading.value = true;\r\n        error.value = null;\r\n        const throwExp = args &&\r\n            fn.length !== args.length &&\r\n            args.length > 0 &&\r\n            isBoolean(args[args.length - 1])\r\n            ? args[args.length - 1]\r\n            : throwException;\r\n        const currentPromise = (promise.value = fn(...args));\r\n        try {\r\n            const r = await currentPromise;\r\n            if (promise.value === currentPromise) {\r\n                result.value = r;\r\n            }\r\n            return r;\r\n        }\r\n        catch (er) {\r\n            if (toRaw(promise.value) === toRaw(currentPromise)) {\r\n                error.value = er;\r\n                result.value = null;\r\n            }\r\n            // if(throwExp){\r\n            //   throw er\r\n            // }\r\n            // return undefined\r\n            return throwExp ? currentPromise : undefined;\r\n        }\r\n        finally {\r\n            if (promise.value === currentPromise) {\r\n                loading.value = false;\r\n            }\r\n        }\r\n    };\r\n    if (!lazy) {\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (fn.length > 0 &&\r\n                !isBoolean(isObject(lazyOptions) ? lazyOptions.lazy : lazyOptions)) {\r\n                console.warn(\"[usePromise] parameters detected on `fn` factory. Executing promise without arguments.\");\r\n            }\r\n        }\r\n        // @ts-ignore\r\n        exec();\r\n    }\r\n    return {\r\n        exec,\r\n        result,\r\n        promise,\r\n        loading,\r\n        error,\r\n    };\r\n}\n\nfunction useCancellablePromise(fn, lazyOptions) {\r\n    const cancelled = ref(false);\r\n    let _cancel = undefined;\r\n    const cancel = (result) => {\r\n        if (!_cancel) {\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                console.warn(\"[useCancellablePromise] There's no promise to cancel. Please make sure to call `exec`\");\r\n            }\r\n            return;\r\n        }\r\n        _cancel(result);\r\n    };\r\n    const promise = (p) => new Promise((res, rej) => {\r\n        cancelled.value = false;\r\n        _cancel = (result) => {\r\n            cancelled.value = true;\r\n            rej(result);\r\n        };\r\n        p.then(res).catch(rej);\r\n    });\r\n    const use = usePromise((...args) => promise(fn(...args)), lazyOptions);\r\n    if (getCurrentInstance() &&\r\n        (!isObject(lazyOptions) || lazyOptions.unmountCancel !== false)) {\r\n        onUnmounted(() => _cancel && _cancel());\r\n    }\r\n    return {\r\n        ...use,\r\n        cancel,\r\n        cancelled,\r\n    };\r\n}\n\nconst MAX_RETRIES = 9000;\r\n/* istanbul ignore next */\r\nconst ExecutionId = /*#__PURE__*/ Symbol(((process.env.NODE_ENV !== 'production') && \"RetryId\") || ``);\r\n/* istanbul ignore next */\r\nconst CancellationToken = /*#__PURE__*/ Symbol(((process.env.NODE_ENV !== 'production') && \"CancellationToken\") || ``);\r\nconst defaultStrategy = async (options, context, factory, args) => {\r\n    const retryId = context[ExecutionId].value;\r\n    let i = -1;\r\n    const maxRetries = options.maxRetries || MAX_RETRIES + 1;\r\n    const delay = options.retryDelay || noDelay;\r\n    context.retryErrors.value = [];\r\n    context.isRetrying.value = false;\r\n    context.nextRetry.value = undefined;\r\n    let nextRetry = undefined;\r\n    do {\r\n        let success = false;\r\n        let result = null;\r\n        try {\r\n            ++i;\r\n            if (args) {\r\n                result = factory(...args);\r\n            }\r\n            else {\r\n                result = factory();\r\n            }\r\n            if (isPromise(result)) {\r\n                result = await result;\r\n            }\r\n            // is cancelled?\r\n            if (context[CancellationToken].value) {\r\n                return null;\r\n            }\r\n            success = true;\r\n        }\r\n        catch (error) {\r\n            result = null;\r\n            context.retryErrors.value.push(error);\r\n        }\r\n        // is our retry current one?\r\n        if (retryId !== context[ExecutionId].value) {\r\n            return result;\r\n        }\r\n        if (success) {\r\n            context.isRetrying.value = false;\r\n            context.nextRetry.value = undefined;\r\n            return result;\r\n        }\r\n        if (i >= maxRetries) {\r\n            context.isRetrying.value = false;\r\n            context.nextRetry.value = undefined;\r\n            return Promise.reject(new Error(`[useRetry] max retries reached ${maxRetries}`));\r\n        }\r\n        context.isRetrying.value = true;\r\n        const now = Date.now();\r\n        const pDelayBy = delay(i); // wrapped\r\n        const delayBy = isPromise(pDelayBy) ? await pDelayBy : pDelayBy; // unwrap promise\r\n        if (!isPromise(pDelayBy) || !!delayBy) {\r\n            if (isNumber(delayBy)) {\r\n                nextRetry = delayBy;\r\n            }\r\n            else if (isDate(delayBy)) {\r\n                nextRetry = delayBy.getTime();\r\n            }\r\n            else {\r\n                throw new Error(`[useRetry] invalid value received from options.retryDelay '${typeof delayBy}'`);\r\n            }\r\n            // if the retry is in the past, means we need to await that amount\r\n            if (nextRetry < now) {\r\n                context.nextRetry.value = now + nextRetry;\r\n            }\r\n            else {\r\n                context.nextRetry.value = nextRetry;\r\n                nextRetry = nextRetry - now;\r\n            }\r\n            if (nextRetry > 0) {\r\n                await promisedTimeout(nextRetry);\r\n            }\r\n        }\r\n        // is cancelled?\r\n        if (context[CancellationToken].value) {\r\n            return null;\r\n        }\r\n        // is our retry current one?\r\n        if (retryId !== context[ExecutionId].value) {\r\n            return result;\r\n        }\r\n    } while (i < MAX_RETRIES);\r\n    return null;\r\n};\r\nfunction useRetry(options, factory) {\r\n    const opt = !options || isFunction(options) ? {} : options;\r\n    const fn = isFunction(options) ? options : factory;\r\n    if (!isFunction(options) && !isObject(options)) {\r\n        throw new Error(\"[useRetry] options needs to be 'object'\");\r\n    }\r\n    if (!!fn && !isFunction(fn)) {\r\n        throw new Error(\"[useRetry] factory needs to be 'function'\");\r\n    }\r\n    const isRetrying = ref(false);\r\n    const nextRetry = ref();\r\n    const retryErrors = ref([]);\r\n    const cancellationToken = { value: false };\r\n    const retryId = { value: 0 };\r\n    const retryCount = computed(() => retryErrors.value.length);\r\n    const context = {\r\n        isRetrying,\r\n        retryCount,\r\n        nextRetry,\r\n        retryErrors,\r\n        [ExecutionId]: retryId,\r\n        [CancellationToken]: cancellationToken\r\n    };\r\n    const exec = fn\r\n        ? (...args) => {\r\n            ++context[ExecutionId].value;\r\n            return defaultStrategy(opt, context, fn, args);\r\n        }\r\n        : (f) => {\r\n            ++context[ExecutionId].value;\r\n            return defaultStrategy(opt, context, f, undefined);\r\n        };\r\n    const cancel = () => {\r\n        context.isRetrying.value = false;\r\n        context.retryErrors.value.push(new Error(\"[useRetry] cancelled\"));\r\n        context.nextRetry.value = undefined;\r\n        cancellationToken.value = true;\r\n    };\r\n    return {\r\n        ...context,\r\n        cancel,\r\n        exec\r\n    };\r\n}\r\nconst exponentialDelay = retryNumber => {\r\n    const delay = Math.pow(2, retryNumber) * 100;\r\n    const randomSum = delay * 0.2 * Math.random(); // 0-20% of the delay\r\n    return delay + randomSum;\r\n};\r\nconst noDelay = () => 0;\n\nfunction usePromiseLazy(fn, throwException = false) {\r\n    // @ts-ignore\r\n    return usePromise(fn, {\r\n        lazy: true,\r\n        throwException\r\n    });\r\n}\n\n// istanbul ignore next\r\nconst DEVTOOLS_KEY = \r\n/*#__PURE__*/ Symbol(((process.env.NODE_ENV !== 'production') && \"DEVTOOLS_KEY\") || ``);\r\n/**\r\n * provide devtools api instance to the app\r\n * @param app\r\n * @param api\r\n */\r\nfunction setDevtools(app, api) {\r\n    if (!isFunction(app.provide)) {\r\n        console.warn(\"[vue-composable] devtools is not supported for vue 2\");\r\n        return;\r\n    }\r\n    app.provide(DEVTOOLS_KEY, api);\r\n}\r\n/**\r\n * Exposes the internal devtools api instance\r\n */\r\nfunction getDevtools() {\r\n    const empty = {};\r\n    const devtools = inject(DEVTOOLS_KEY, empty);\r\n    if (devtools === empty) {\r\n        console.warn(`[vue-composable] devtools not found, please run app.use(VueComposableDevtools)`);\r\n        return undefined;\r\n    }\r\n    return devtools;\r\n}\n\nlet apiProxyFactory = undefined;\r\nasync function pushEventsToApi(api, EventQueue, ApiQueue) {\r\n    setTimeout(async () => {\r\n        const priority = [\r\n            \"addTimelineLayer\",\r\n            \"addInspector\",\r\n            \"sendInspectorTree\",\r\n            \"sendInspectorState\",\r\n            \"addTimelineEvent\",\r\n        ];\r\n        for (const k of priority) {\r\n            for (const it of ApiQueue.filter((x) => x.type === k)) {\r\n                // @ts-ignore\r\n                api[k](...it.args);\r\n            }\r\n            await promisedTimeout(20);\r\n        }\r\n        new Set(ApiQueue.filter((x) => x.type === \"notifyComponentUpdate\").map((x) => x.args[0])).forEach((x) => api.notifyComponentUpdate(x));\r\n        // @ts-ignore\r\n        EventQueue.forEach((x) => api.on[x.type](...x.args));\r\n        EventQueue.length = 0;\r\n        ApiQueue.length = 0;\r\n    }, 100);\r\n}\r\n{\r\n    apiProxyFactory = (promiseApi) => {\r\n        let api;\r\n        const EventQueue = [];\r\n        const ApiQueue = [];\r\n        const onProxy = new Proxy({}, {\r\n            get: (target, prop) => {\r\n                if (api) {\r\n                    //@ts-expect-error\r\n                    return api.on[prop];\r\n                }\r\n                else if (prop in target) {\r\n                    // @ts-ignore\r\n                    return target[prop];\r\n                }\r\n                else {\r\n                    //@ts-ignore\r\n                    return (target[prop] = (...args) => {\r\n                        EventQueue.push({\r\n                            type: prop,\r\n                            args,\r\n                        });\r\n                    });\r\n                }\r\n            },\r\n        });\r\n        const proxy = new Proxy({\r\n            on: onProxy,\r\n        }, {\r\n            get: (target, prop) => {\r\n                if (prop === \"on\") {\r\n                    return target.on;\r\n                }\r\n                if (api) {\r\n                    return api[prop];\r\n                }\r\n                if (prop in target) {\r\n                    // @ts-ignore\r\n                    return target[prop];\r\n                }\r\n                // @ts-ignore\r\n                return (target[prop] = (...args) => {\r\n                    ApiQueue.push({\r\n                        type: prop,\r\n                        args,\r\n                    });\r\n                });\r\n            },\r\n        });\r\n        promiseApi.then((x) => {\r\n            api = x;\r\n            pushEventsToApi(api, EventQueue, ApiQueue);\r\n        });\r\n        return proxy;\r\n    };\r\n}\r\nvar ProxyApi = apiProxyFactory;\n\nlet setupDevtoolsPlugin = NO_OP;\r\n// NOTE maybe change this to other flag\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    try {\r\n        setupDevtoolsPlugin = require(\"@vue/devtools-api\").setupDevtoolsPlugin;\r\n    }\r\n    catch { }\r\n}\r\nconst UseDevtoolsApp = (app, id = \"vue-composable\", label = \"Vue-composable devtools plugin\") => {\r\n    const promise = new Promise((res) => {\r\n        setupDevtoolsPlugin({\r\n            id,\r\n            label,\r\n            app,\r\n        }, res);\r\n    });\r\n    setDevtools(app, ProxyApi(promise));\r\n};\n\nconst VueComposableDevtools = {\r\n    install(app, options = {\r\n        id: \"vue-composable\",\r\n        label: \"Vue-composable devtools plugin\"\r\n    }) {\r\n        return UseDevtoolsApp(app, options.id, options.label);\r\n    }\r\n};\n\nfunction useDevtoolsInspector(options, nodeList = []) {\r\n    const api = getDevtools();\r\n    const nodes = ref(nodeList);\r\n    const byId = computed(() => {\r\n        if (!nodes.value)\r\n            return new Map();\r\n        const r = toRaw(nodes.value);\r\n        const m = new Map();\r\n        for (const i of r) {\r\n            m.set(i.id, i);\r\n        }\r\n        return m;\r\n    });\r\n    if (api) {\r\n        const id = options.id;\r\n        api.addInspector(options);\r\n        // api.on.getInspectorState();\r\n        api.on.getInspectorTree((payload) => {\r\n            if (payload.inspectorId != id)\r\n                return;\r\n            if (!nodes.value)\r\n                return;\r\n            const filter = payload.filter;\r\n            let m = toRaw(nodes.value);\r\n            if (payload.filter) {\r\n                if (options.nodeFilter) {\r\n                    m = options.nodeFilter(payload.filter, m);\r\n                }\r\n                else {\r\n                    // TODO better filtering, only currently filtering root nodes\r\n                    m = m.filter((x) => x.id.indexOf(filter) >= 0 || x.label.indexOf(filter) >= 0);\r\n                }\r\n            }\r\n            payload.rootNodes = m;\r\n        });\r\n        api.on.getInspectorState((payload) => {\r\n            if (payload.inspectorId != id)\r\n                return;\r\n            const node = byId.value.get(payload.nodeId);\r\n            if (node) {\r\n                const s = reactive(node.state); // unwrap\r\n                payload.state = options.stateFilter ? options.stateFilter(\"\", s) : s;\r\n            }\r\n        });\r\n        watch(nodes, () => {\r\n            api.sendInspectorTree(id);\r\n            api.sendInspectorState(id);\r\n        }, {\r\n            immediate: true,\r\n            deep: true,\r\n        });\r\n    }\r\n    return {\r\n        nodes,\r\n    };\r\n}\n\nfunction useDevtoolsTimelineLayer(id, label, color) {\r\n    const api = getDevtools();\r\n    let addEvent = NO_OP;\r\n    let pushEvent = NO_OP;\r\n    if (api) {\r\n        api.addTimelineLayer({\r\n            id,\r\n            label,\r\n            color,\r\n        });\r\n        addEvent = (event, all) => api.addTimelineEvent({ layerId: id, event, all });\r\n        pushEvent = (event) => addEvent({ ...event, time: Date.now() });\r\n    }\r\n    return {\r\n        id,\r\n        addEvent,\r\n        pushEvent,\r\n    };\r\n}\n\nfunction getSetupStateExtra(raw) {\r\n    if (!raw)\r\n        return {};\r\n    // NOTE vue3!\r\n    const isRef = !!raw.__v_isRef;\r\n    const isComputed = isRef && !!raw.effect;\r\n    const isReactive = !!raw.__v_reactive;\r\n    const objectType = isComputed\r\n        ? \"Computed\"\r\n        : isRef\r\n            ? \"Ref\"\r\n            : isReactive\r\n                ? \"Reactive\"\r\n                : null;\r\n    return {\r\n        ...(objectType ? { objectType } : {}),\r\n        ...(raw.effect ? { raw: raw.effect.raw.toString() } : {}),\r\n    };\r\n}\r\nfunction useDevtoolsComponentState(state, options) {\r\n    const instance = getCurrentInstance();\r\n    const api = getDevtools();\r\n    if (api && instance) {\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.componentInstance !== instance)\r\n                return;\r\n            const [type, multiple] = isObject(options)\r\n                ? [options.type, options.multiple]\r\n                : [\"setup\", false];\r\n            if (isFunction(state)) {\r\n                state(payload.instanceData, ctx);\r\n                return;\r\n            }\r\n            let data = isArray(state)\r\n                ? state\r\n                : Object.keys(state).map((key) => ({\r\n                    type,\r\n                    key,\r\n                    value: unwrap(state[key]),\r\n                    ...getSetupStateExtra(state[key]),\r\n                }));\r\n            if (!multiple) {\r\n                const inserted = new Set(payload.instanceData.state.map((x) => x.key));\r\n                data = data.filter((x) => !inserted.has(x.key));\r\n            }\r\n            payload.instanceData.state.push(...data);\r\n        });\r\n    }\r\n}\n\nfunction isFetchOptions(v) {\r\n    return (v &&\r\n        (isBoolean(v.isJson) ||\r\n            isBoolean(v.parseImmediate) ||\r\n            isBoolean(v.unmountCancel)));\r\n}\r\nfunction useFetch(options, requestInitOptions) {\r\n    // TODO move to computeAsync\r\n    const json = ref(null);\r\n    const text = ref(\"\");\r\n    const blob = ref();\r\n    const jsonError = ref(null);\r\n    const [isJson, parseImmediate, unmountCancel] = isFetchOptions(options)\r\n        ? [\r\n            options.isJson !== false,\r\n            options.parseImmediate !== false,\r\n            options.unmountCancel !== false,\r\n        ]\r\n        : isFetchOptions(requestInitOptions)\r\n            ? [\r\n                requestInitOptions.isJson !== false,\r\n                requestInitOptions.parseImmediate !== false,\r\n                requestInitOptions.unmountCancel !== false,\r\n            ]\r\n            : [true, true, true];\r\n    const requestInit = options\r\n        ? isString(options)\r\n            ? requestInitOptions\r\n            : isFetchOptions(options)\r\n                ? options\r\n                : isString(options.url)\r\n                    ? requestInitOptions\r\n                    : options\r\n        : undefined;\r\n    let addTimelineEvent = undefined;\r\n    let devtoolId = (process.env.NODE_ENV !== 'production')\r\n        ? isString(options)\r\n            ? options\r\n            : options && isString(options.url)\r\n                ? options.url\r\n                : \"useFetch\"\r\n        : undefined;\r\n    if ((process.env.NODE_ENV !== 'production') && devtoolId) {\r\n        const layer = useDevtoolsTimelineLayer(`useFetch:${devtoolId}`, devtoolId, 0x32a2bf);\r\n        addTimelineEvent = (time, request, extra) => layer.addEvent({\r\n            time,\r\n            data: {\r\n                ...request,\r\n                ...extra,\r\n            },\r\n            meta: {},\r\n        });\r\n    }\r\n    const isCancelled = ref(false);\r\n    const cancelledMessage = ref();\r\n    let abortController = undefined;\r\n    const cancel = (message) => {\r\n        if (!abortController) {\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (addTimelineEvent) {\r\n                    addTimelineEvent(Date.now(), { message }, {\r\n                        type: \"cancel_error\",\r\n                        error: \"No request has been made yet\",\r\n                    });\r\n                }\r\n                throw new Error(\"Cannot cancel because no request has been made\");\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        abortController.abort();\r\n        isCancelled.value = true;\r\n        cancelledMessage.value = message;\r\n        if (addTimelineEvent) {\r\n            addTimelineEvent(Date.now(), { message }, {\r\n                type: \"cancel\",\r\n            });\r\n        }\r\n    };\r\n    const use = usePromise(async (request, init) => {\r\n        abortController = new AbortController();\r\n        if (addTimelineEvent) {\r\n            addTimelineEvent(Date.now(), isString(request) ? { url: request } : request, { type: \"request\", init });\r\n        }\r\n        const response = await fetch(request, {\r\n            signal: abortController.signal,\r\n            ...requestInit,\r\n            ...init,\r\n        });\r\n        if (addTimelineEvent) {\r\n            addTimelineEvent(Date.now(), response, {\r\n                type: \"response\",\r\n                init,\r\n                request,\r\n            });\r\n        }\r\n        if (response) {\r\n            const promises = [\r\n                // JSON\r\n                isJson\r\n                    ? response\r\n                        .clone()\r\n                        .json()\r\n                        .then((x) => (json.value = x))\r\n                        .catch((x) => {\r\n                        json.value = null;\r\n                        jsonError.value = x;\r\n                    })\r\n                    : Promise.resolve(),\r\n                // BLOB\r\n                response\r\n                    .clone()\r\n                    .blob()\r\n                    .then((x) => {\r\n                    blob.value = x;\r\n                }),\r\n                // TEXT\r\n                response\r\n                    .clone()\r\n                    .text()\r\n                    .then((x) => {\r\n                    text.value = x;\r\n                }),\r\n            ];\r\n            if (parseImmediate) {\r\n                await Promise.all(promises);\r\n                if (addTimelineEvent) {\r\n                    addTimelineEvent(Date.now(), {}, {\r\n                        type: \"parsed\",\r\n                        json: json.value,\r\n                        blob: blob.value,\r\n                        text: text.value,\r\n                        request,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return response;\r\n    }, true);\r\n    const status = computed(() => (use.result.value && use.result.value.status) || null);\r\n    const statusText = computed(() => (use.result.value && use.result.value.statusText) || null);\r\n    // if not options are provided in the config, execute it straight away\r\n    // NOTE: `false` is passed to the `exec` to prevent the exception to be thrown\r\n    if (options) {\r\n        if (isString(options) || isString(options.url)) {\r\n            use.exec(options, undefined, false);\r\n        }\r\n    }\r\n    if (unmountCancel && getCurrentInstance()) {\r\n        onUnmounted(() => {\r\n            if (abortController) {\r\n                cancel(\"unmounted\");\r\n            }\r\n        });\r\n    }\r\n    return {\r\n        ...use,\r\n        cancel,\r\n        isCancelled,\r\n        cancelledMessage,\r\n        text,\r\n        blob,\r\n        json,\r\n        jsonError,\r\n        status,\r\n        statusText,\r\n    };\r\n}\n\nfunction useWebSocket(url, protocols) {\r\n    const supported = isClient && \"WebSocket\" in window;\r\n    let ws = null;\r\n    const messageEvent = ref(null);\r\n    const errorEvent = ref(null);\r\n    const data = ref(null);\r\n    const isOpen = ref(false);\r\n    const isClosed = ref(false);\r\n    const errored = ref(false);\r\n    /* istanbul ignore next  */\r\n    let lastMessage = ((process.env.NODE_ENV !== 'production') && Date.now()) || undefined;\r\n    let send = NO_OP;\r\n    let close = NO_OP;\r\n    if (supported) {\r\n        ws = new WebSocket(url, protocols);\r\n        ws.addEventListener(\"message\", x => {\r\n            messageEvent.value = x;\r\n            data.value = x.data;\r\n            // if the messages are to quick, we need to warn\r\n            /* istanbul ignore else  */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (Date.now() - lastMessage < 2) {\r\n                    console.warn('[useWebSocket] message rate is too high, if you are using \"data\" or \"messageEvent\"' +\r\n                        \" you might not get updated of all the messages.\" +\r\n                        ' Use \"ws.addEventListener(\"message\", handler)\" instead');\r\n                }\r\n                lastMessage = Date.now();\r\n            }\r\n        });\r\n        ws.addEventListener(\"error\", error => {\r\n            errorEvent.value = error;\r\n            errored.value = true;\r\n        });\r\n        ws.addEventListener(\"close\", () => {\r\n            isOpen.value = false;\r\n            isClosed.value = true;\r\n        });\r\n        ws.addEventListener(\"open\", () => {\r\n            isOpen.value = true;\r\n            isClosed.value = false;\r\n        });\r\n        send = (data) => ws.send(data);\r\n        close = (code, reason) => {\r\n            ws.close(code, reason);\r\n        };\r\n    }\r\n    return {\r\n        supported,\r\n        ws,\r\n        send,\r\n        close,\r\n        messageEvent,\r\n        errorEvent,\r\n        data,\r\n        isOpen,\r\n        isClosed,\r\n        errored\r\n    };\r\n}\n\nfunction useIntersectionObserver(refEl, refOptions) {\r\n    const supported = isClient && \"IntersectionObserver\" in window;\r\n    const wrappedElement = refEl ? wrap(refEl) : undefined;\r\n    const element = wrappedElement && (isElement(wrappedElement.value) || !wrappedElement.value)\r\n        ? wrappedElement\r\n        : undefined;\r\n    const options = computed(() => refOptions\r\n        ? unwrap(refOptions)\r\n        : !element\r\n            ? unwrap(refEl)\r\n            : undefined);\r\n    const elements = ref([]);\r\n    const isIntersecting = computed(() => elements.value.length > 0 && elements.value.every(x => x.isIntersecting));\r\n    const handling = (entries) => {\r\n        elements.value = entries;\r\n    };\r\n    let observer = ref();\r\n    if (supported) {\r\n        watch(options, options => {\r\n            if (observer.value) {\r\n                observer.value.disconnect();\r\n            }\r\n            const opts = (options &&\r\n                options && {\r\n                root: unwrap(options.root),\r\n                rootMargin: unwrap(options.rootMargin),\r\n                threshold: unwrap(options.threshold)\r\n            }) ||\r\n                undefined;\r\n            observer.value = new IntersectionObserver(handling, opts);\r\n            const targets = elements.value.map(x => x.target);\r\n            targets.forEach(observer.value.observe);\r\n        }, { deep: true, immediate: true });\r\n    }\r\n    const observe = supported\r\n        ? (element) => {\r\n            const e = unwrap(element);\r\n            observer.value.observe(e);\r\n        }\r\n        : NO_OP;\r\n    const unobserve = supported\r\n        ? (element) => {\r\n            const e = unwrap(element);\r\n            observer.value.unobserve(e);\r\n        }\r\n        : NO_OP;\r\n    const disconnect = () => observer.value.disconnect();\r\n    // if the element is passed we should add hooks\r\n    if (element) {\r\n        // if value is defined it is already being observed\r\n        // if (!element.value) {\r\n        onMounted(() => {\r\n            if (element.value) {\r\n                observe(element);\r\n            }\r\n        });\r\n        // }\r\n        onUnmounted(() => {\r\n            disconnect();\r\n        });\r\n    }\r\n    // // debug is still work in progress, would be nice to provide some\r\n    // // information about the target\r\n    // /* istanbul ignore next */\r\n    // const debug = () => {\r\n    //   if (elements.value.length === 0) {\r\n    //     (process.env.NODE_ENV !== 'production') && console.warn('[IntersectionObserver] no elements provided, did you mount the component?')\r\n    //     return;\r\n    //   }\r\n    //   // TODO: add border to the elements\r\n    // };\r\n    return {\r\n        supported,\r\n        elements,\r\n        observe,\r\n        unobserve,\r\n        disconnect,\r\n        isIntersecting\r\n    };\r\n}\n\nfunction useNetworkInformation() {\r\n    const connection = isClient\r\n        ? navigator.connection ||\r\n            navigator.mozConnection ||\r\n            navigator.webkitConnection\r\n        : false;\r\n    const supported = !!connection;\r\n    const downlink = ref(0);\r\n    const downlinkMax = ref(0);\r\n    const effectiveType = ref(\"none\");\r\n    const rtt = ref(0);\r\n    const saveData = ref(false);\r\n    const type = ref(\"none\");\r\n    let handler = NO_OP;\r\n    let remove = NO_OP;\r\n    /* istanbul ignore else  */\r\n    if (connection) {\r\n        handler = () => {\r\n            downlink.value = connection.downlink;\r\n            downlinkMax.value = connection.downlinkMax;\r\n            effectiveType.value = connection.effectiveType;\r\n            rtt.value = connection.rtt;\r\n            saveData.value = connection.saveData;\r\n            type.value = connection.type;\r\n        };\r\n        remove = useEvent(connection, \"change\", handler, PASSIVE_EV);\r\n        handler();\r\n    }\r\n    else {\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(\"[navigator.connection] not found, networkInformation not available.\");\r\n        }\r\n    }\r\n    return {\r\n        supported,\r\n        downlink,\r\n        downlinkMax,\r\n        effectiveType,\r\n        rtt,\r\n        saveData,\r\n        type,\r\n        remove\r\n    };\r\n}\n\nlet online = undefined;\r\nfunction useOnline() {\r\n    const supported = isClient && \"onLine\" in navigator;\r\n    // not sure how to test this :/\r\n    if (!supported) {\r\n        online = ref(false);\r\n    }\r\n    if (!online) {\r\n        online = ref(navigator.onLine);\r\n        window.addEventListener(\"offline\", () => (online.value = false), PASSIVE_EV);\r\n        window.addEventListener(\"online\", () => (online.value = true), PASSIVE_EV);\r\n    }\r\n    return {\r\n        supported,\r\n        online\r\n    };\r\n}\n\nlet visibility = undefined;\r\nlet hidden = undefined;\r\nfunction usePageVisibility() {\r\n    if (!hidden) {\r\n        hidden = ref(isClient && document.hidden);\r\n    }\r\n    if (!visibility) {\r\n        if (isClient) {\r\n            visibility = ref(document.visibilityState);\r\n            document.addEventListener(\"visibilitychange\", () => {\r\n                visibility.value = document.visibilityState;\r\n                hidden.value = document.hidden;\r\n            }, PASSIVE_EV);\r\n        }\r\n        else {\r\n            visibility = ref(\"visible\");\r\n        }\r\n    }\r\n    return {\r\n        visibility,\r\n        hidden\r\n    };\r\n}\n\nlet language = undefined;\r\nlet languages = undefined;\r\nfunction useLanguage() {\r\n    if (!language) {\r\n        language = isClient ? ref(navigator.language) : ref(\"\");\r\n    }\r\n    if (!languages) {\r\n        if (isClient) {\r\n            languages = ref(navigator.languages);\r\n            const change = () => {\r\n                language.value = navigator.language;\r\n                languages.value = navigator.languages;\r\n            };\r\n            window.addEventListener(\"languagechange\", change, PASSIVE_EV);\r\n        }\r\n        else {\r\n            languages = ref([]);\r\n        }\r\n    }\r\n    return {\r\n        language,\r\n        languages\r\n    };\r\n}\n\nfunction useBroadcastChannel(name, onBeforeClose) {\r\n    const supported = isClient && \"BroadcastChannel\" in self;\r\n    const data = ref(null);\r\n    const messageEvent = ref(null);\r\n    const errorEvent = ref(null);\r\n    const errored = ref(false);\r\n    const isClosed = ref(false);\r\n    let send = NO_OP;\r\n    let close = NO_OP;\r\n    let addListener = NO_OP;\r\n    /* istanbul ignore else  */\r\n    if (supported) {\r\n        const bc = new BroadcastChannel(name);\r\n        bc.addEventListener(\"messageerror\", e => {\r\n            errorEvent.value = e;\r\n            errored.value = true;\r\n        }, PASSIVE_EV);\r\n        bc.addEventListener(\"message\", ev => {\r\n            messageEvent.value = ev;\r\n            data.value = ev.data;\r\n        }, PASSIVE_EV);\r\n        send = d => bc.postMessage(d);\r\n        close = () => {\r\n            bc.close();\r\n            isClosed.value = true;\r\n        };\r\n        addListener = (cb, o) => {\r\n            bc.addEventListener(\"message\", cb, o);\r\n            onUnmounted(() => bc.removeEventListener(\"message\", cb));\r\n        };\r\n        onUnmounted(() => {\r\n            onBeforeClose && onBeforeClose();\r\n            close();\r\n        });\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(\"[BroadcastChannel] is not supported\");\r\n        }\r\n    }\r\n    return {\r\n        supported,\r\n        data,\r\n        messageEvent,\r\n        errorEvent,\r\n        errored,\r\n        isClosed,\r\n        send,\r\n        close,\r\n        addListener\r\n    };\r\n}\n\nfunction useGeolocation(options) {\r\n    const supported = isClient && !!navigator.geolocation;\r\n    // used to check if the execution is lazy\r\n    const lazy = ref(options ? options.immediate === false : undefined);\r\n    const error = ref(null);\r\n    const timestamp = ref(null);\r\n    const coords = ref(null);\r\n    const highAccuracy = ref((options && options.enableHighAccuracy) || null);\r\n    // allow manual control on when the geolocation is requested\r\n    let refresh = NO_OP;\r\n    if (supported) {\r\n        const setPosition = (pos) => {\r\n            timestamp.value = pos.timestamp;\r\n            coords.value = pos.coords;\r\n            error.value = null;\r\n        };\r\n        const setError = (err) => {\r\n            timestamp.value = Date.now();\r\n            coords.value = null;\r\n            error.value = err;\r\n        };\r\n        const clearWatch = () => lazy.value !== true &&\r\n            watchId &&\r\n            navigator.geolocation.clearWatch(watchId);\r\n        let _currentPositionRefresh = () => navigator.geolocation.getCurrentPosition(setPosition, setError, options);\r\n        if (lazy.value) {\r\n            refresh = () => {\r\n                if (lazy.value) {\r\n                    lazy.value = false;\r\n                }\r\n                else {\r\n                    _currentPositionRefresh();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            // NOTE probably useless??\r\n            refresh = _currentPositionRefresh;\r\n        }\r\n        let watchId = 0;\r\n        onMounted(() => watch([highAccuracy, lazy], (a) => {\r\n            clearWatch();\r\n            const enableHighAccuracy = isBoolean(a[0])\r\n                ? a[0]\r\n                : options\r\n                    ? options.enableHighAccuracy\r\n                    : undefined;\r\n            watchId = navigator.geolocation.watchPosition(setPosition, setError, options\r\n                ? { ...options, enableHighAccuracy }\r\n                : { enableHighAccuracy });\r\n        }, {\r\n            immediate: !lazy.value,\r\n        }));\r\n        onUnmounted(clearWatch);\r\n    }\r\n    return {\r\n        supported,\r\n        refresh,\r\n        error,\r\n        timestamp,\r\n        coords,\r\n        highAccuracy,\r\n    };\r\n}\n\n/**\r\n * Gets the current value of the given CSS variable name for the given element.\r\n *\r\n * @param element The element to get the variable for.\r\n * @param name The CSS variable name.\r\n */\r\nfunction getCssVariableFor(element, name) {\r\n    const result = getComputedStyle(element).getPropertyValue(name);\r\n    return result ? result.trim() : null;\r\n}\r\n/**\r\n * Sets the value of the given CSS variable for the given element.\r\n *\r\n * @param element The element to set the variable for.\r\n * @param name The CSS variable name without dashes.\r\n * @param value The CSS variable value.\r\n */\r\nfunction setCssVariableFor(element, name, value) {\r\n    element.style.setProperty(name, value);\r\n}\r\nconst defaultOptions = {\r\n    attributes: true,\r\n    childList: true,\r\n    subtree: true\r\n};\r\nconst sanitizeCssVarName = (name) => {\r\n    if (name.length <= 2 || name[0] !== \"-\" || name[1] !== \"-\") {\r\n        return `--${name}`;\r\n    }\r\n    return name;\r\n};\r\nfunction useCssVariables(variables, elementOrOptions, optionsConfig) {\r\n    const supported = isClient && \"MutationObserver\" in self;\r\n    const [element, options] = isRef(elementOrOptions) || isElement(elementOrOptions)\r\n        ? [elementOrOptions, optionsConfig || defaultOptions]\r\n        : [\r\n            (supported && document.documentElement) || {},\r\n            elementOrOptions || defaultOptions\r\n        ];\r\n    // Reactive property to tell if the observer is listening\r\n    const observing = ref(true);\r\n    // Stores the results by reference.\r\n    const result = {};\r\n    // If the element is ref, we should only update the variable on mount\r\n    const updateValues = [];\r\n    // extract name\r\n    const defEntries = Object.entries(variables).map((x) => {\r\n        const [name, value] = isString(x[1]) ? [x[1]] : [x[1].name, x[1].value];\r\n        if (value) {\r\n            updateValues.push(() => setCssVariableFor(unwrap(element), name, unwrap(value)));\r\n            // if is ref, use provided ref instead\r\n            result[x[0]] = wrap(value);\r\n        }\r\n        return [x[0], sanitizeCssVarName(name)];\r\n    });\r\n    for (let i = 0; i < defEntries.length; i++) {\r\n        const [key, name] = defEntries[i];\r\n        if (!result[key]) {\r\n            // if is ref set null, onMount we will update\r\n            result[key] = ref((isRef(element) && !element.value) || !supported\r\n                ? null\r\n                : getCssVariableFor(unwrap(element), name));\r\n        }\r\n        if (supported) {\r\n            // keep track of changes\r\n            watch([result[key], wrap(element)], (val) => {\r\n                if (!observing)\r\n                    return;\r\n                // don't force if the current value is the same as the given one\r\n                // or if the given one is empty\r\n                if (val[1] && val[0] !== getCssVariableFor(val[1], name)) {\r\n                    setCssVariableFor(val[1], name, val[0]);\r\n                }\r\n            }, { immediate: !isRef(element) });\r\n        }\r\n    }\r\n    if (!supported) {\r\n        return {\r\n            ...result,\r\n            stop: NO_OP,\r\n            resume: NO_OP,\r\n            supported,\r\n            observing\r\n        };\r\n    }\r\n    const update = () => {\r\n        // Each time an observation has been made,\r\n        // we look up for each CSS variable and update their values.\r\n        for (let i = 0; i < defEntries.length; i++) {\r\n            const [key, value] = defEntries[i];\r\n            result[key].value = getCssVariableFor(unwrap(element), value);\r\n        }\r\n    };\r\n    // Sets up the observer.\r\n    const observer = new MutationObserver(update);\r\n    // Sets the `stop` method.\r\n    const stop = () => {\r\n        observer.disconnect();\r\n        observing.value = false;\r\n    };\r\n    // Sets the `start` method.\r\n    const resume = () => {\r\n        // if it was stopped we will update the variables to the current value\r\n        if (!observing.value) {\r\n            update();\r\n        }\r\n        observer.observe(unwrap(element), options);\r\n        observing.value = true;\r\n    };\r\n    // Stops on destroy\r\n    onUnmounted(stop);\r\n    if (isRef(element)) {\r\n        onMounted(() => {\r\n            updateValues.forEach(x => x());\r\n            watch(element, (n, o) => {\r\n                if (o) {\r\n                    stop();\r\n                }\r\n                if (n) {\r\n                    resume();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    else if (isClient || element) {\r\n        updateValues.forEach(x => x());\r\n        // Starts observe\r\n        resume();\r\n    }\r\n    return {\r\n        ...result,\r\n        supported,\r\n        resume,\r\n        stop,\r\n        observing\r\n    };\r\n}\n\n// from https://github.com/dai-shi/react-hooks-worker/blob/1e842ad15c558fc04dd7339a62aaa43f46d1c7cd/src/exposeWorker.js\r\n// export function exposeWorker(func: (...args: any[]) => any): void;\r\nfunction exposeWorker(func) {\r\n    this.onmessage = async (e) => {\r\n        const r = func(e.data);\r\n        if (r === undefined) {\r\n            // istanbul ignore else\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                console.warn(`[exposeWorker] returned \\`${r}\\`, this might cause unexpected behaviour`);\r\n            }\r\n            this.postMessage(r);\r\n        }\r\n        else if (r === null) {\r\n            this.postMessage(r);\r\n        }\r\n        else if (isArray(r)) {\r\n            this.postMessage(r);\r\n        }\r\n        else if (r[Symbol.asyncIterator]) {\r\n            for await (const i of r)\r\n                this.postMessage(i);\r\n        }\r\n        else if (r[Symbol.iterator]) {\r\n            for (const i of r)\r\n                this.postMessage(i);\r\n        }\r\n        else {\r\n            this.postMessage(await r);\r\n        }\r\n    };\r\n}\r\nfunction useWorker(stringUrl, args, options) {\r\n    const supported = isClient && \"Worker\" in self;\r\n    const errorEvent = ref();\r\n    const data = ref();\r\n    const terminated = ref(!supported);\r\n    const errored = ref(!supported);\r\n    if (!supported) {\r\n        terminated.value = true;\r\n        return {\r\n            worker: undefined,\r\n            data,\r\n            postMessage: NO_OP,\r\n            terminate: NO_OP,\r\n            errorEvent,\r\n            errored,\r\n            terminated\r\n        };\r\n    }\r\n    const worker = new Worker(stringUrl, options);\r\n    /* istanbul ignore next  */\r\n    let lastMessage = ((process.env.NODE_ENV !== 'production') && Date.now() - 20) || undefined;\r\n    const postMessage = data => worker.postMessage(data);\r\n    function terminate() {\r\n        worker.terminate();\r\n        terminated.value = true;\r\n    }\r\n    worker.addEventListener(\"message\", x => {\r\n        data.value = x.data;\r\n        // if the messages are to quick, we need to warn\r\n        /* istanbul ignore else  */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (Date.now() - lastMessage < 2) {\r\n                console.warn(\"[useWorker] message rate is too high, you might not get updated of all the messages.\");\r\n            }\r\n            lastMessage = Date.now();\r\n        }\r\n    }, PASSIVE_EV);\r\n    worker.addEventListener(\"error\", error => {\r\n        errorEvent.value = error;\r\n        errored.value = true;\r\n    }, PASSIVE_EV);\r\n    onUnmounted(terminate);\r\n    if (args) {\r\n        postMessage(args);\r\n    }\r\n    return {\r\n        worker,\r\n        data,\r\n        postMessage,\r\n        terminate,\r\n        errorEvent,\r\n        errored,\r\n        terminated\r\n    };\r\n}\n\n/**\r\n * Invokes the native sharing mechanism of the device\r\n * [compatibility](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share)\r\n * @param data - if provided it will automatically try to share it\r\n */\r\nfunction useShare(data) {\r\n    const supported = isClient && \"share\" in navigator;\r\n    let share = () => Promise.resolve(false);\r\n    let canShare = FALSE_OP;\r\n    let shared = ref(false);\r\n    let cancelled = ref(false);\r\n    if (supported) {\r\n        share = data => {\r\n            shared.value = false;\r\n            cancelled.value = false;\r\n            return navigator\r\n                .share(data)\r\n                .then(x => {\r\n                shared.value = true;\r\n                return x;\r\n            })\r\n                .catch(e => {\r\n                shared.value = false;\r\n                cancelled.value = true;\r\n                return false;\r\n            });\r\n        };\r\n        canShare = data => navigator.canShare(data);\r\n        if (data) {\r\n            if (canShare(data)) {\r\n                share(data);\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        supported,\r\n        share,\r\n        canShare,\r\n        shared,\r\n        cancelled\r\n    };\r\n}\n\nfunction useClipboard() {\r\n    const supported = isClient && \"clipboard\" in navigator;\r\n    const text = ref();\r\n    const data = ref();\r\n    const writeText = (data) => {\r\n        text.value = data;\r\n        if (!supported)\r\n            return Promise.resolve();\r\n        // TOOD check for permissions\r\n        return navigator.clipboard.writeText(data);\r\n    };\r\n    const write = (data) => {\r\n        if (!supported)\r\n            return Promise.resolve();\r\n        // TOOD check for permissions\r\n        // @ts-ignore\r\n        return navigator.clipboard.write(data);\r\n    };\r\n    let readText = () => Promise.resolve(undefined);\r\n    // @ts-ignore\r\n    let read = readText;\r\n    if (supported) {\r\n        let updating = false;\r\n        const update = () => readText().then((x) => (text.value = x));\r\n        [\"copy\", \"cut\", \"focus\"].map((event) => useEvent(window, event, () => update()));\r\n        readText = () => navigator.clipboard.readText().then((x) => {\r\n            try {\r\n                updating = true;\r\n                return (text.value = x);\r\n            }\r\n            finally {\r\n                // case of a sync watch it might throw\r\n                updating = false;\r\n            }\r\n        });\r\n        // @ts-ignore this should work\r\n        read = () => navigator.clipboard.read().then((x) => (data.value = x));\r\n        watch(text, debounce((s) => {\r\n            if (updating || !isString(s))\r\n                return;\r\n            writeText(s);\r\n        }, 100));\r\n    }\r\n    return {\r\n        supported,\r\n        text,\r\n        data,\r\n        writeText,\r\n        readText,\r\n        write,\r\n        read,\r\n    };\r\n}\n\n/**\r\n * @param fn setTimeout callback\r\n * @param delay If this parameter is omitted, a value of 0 is used\r\n * (https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout)\r\n */\r\nfunction useTimeout(fn, delay = 0) {\r\n    let ready = ref(false);\r\n    const timeoutId = setTimeout(() => {\r\n        ready.value = true;\r\n        fn();\r\n    }, delay);\r\n    const cancel = () => {\r\n        ready.value = null;\r\n        clearTimeout(timeoutId);\r\n    };\r\n    onUnmounted(cancel);\r\n    return {\r\n        ready,\r\n        cancel,\r\n    };\r\n}\n\nconst inlineWorkExecution = (f) => function (e) {\r\n    const args = e.data || [];\r\n    return new Promise((res) => {\r\n        try {\r\n            Promise.resolve(f.apply(f, args))\r\n                // @ts-ignore\r\n                .then((x) => res(postMessage([true, x])))\r\n                // @ts-ignore\r\n                .catch((x) => res(postMessage([false, x])));\r\n        }\r\n        catch (e) {\r\n            // @ts-ignore\r\n            res(postMessage([false, e]));\r\n        }\r\n    });\r\n};\r\nfunction createBlobUrl(fn, dependencies) {\r\n    const scripts = dependencies.length > 0\r\n        ? `importScripts(\"${dependencies.join('\",\"')}\");`\r\n        : \"\";\r\n    const blobScript = [\r\n        scripts,\r\n        \"onmessage=\",\r\n        `(${inlineWorkExecution.toString()})(${fn.toString()})`,\r\n    ];\r\n    const blob = new Blob(blobScript, { type: \"text/javascript\" });\r\n    return URL.createObjectURL(blob);\r\n}\r\nfunction useWorkerFunction(fn, options) {\r\n    const supported = isClient && \"Worker\" in self;\r\n    // reactive\r\n    const dependencies = computed(() => (options && unwrap(options.dependencies)) || []);\r\n    const timeoutRef = computed(() => options && unwrap(options.timeout));\r\n    if (!supported) {\r\n        return useCancellablePromise(fn, { lazy: true, throwException: true });\r\n    }\r\n    const promise = useCancellablePromise((...args) => new Promise((res, rej) => {\r\n        const blobUrl = createBlobUrl(fn, dependencies.value);\r\n        const worker = new Worker(blobUrl);\r\n        let timeoutId = -1;\r\n        const timeout = timeoutRef.value;\r\n        const terminate = () => {\r\n            worker.terminate();\r\n            URL.revokeObjectURL(blobUrl);\r\n            clearTimeout(timeoutId);\r\n            removeWatch();\r\n        };\r\n        // if the last argument is ref(false) we should also track it\r\n        const watchCancel = args.length === fn.length + 1 &&\r\n            isRef(args[args.length - 1]) &&\r\n            args[args.length - 1].value === false\r\n            ? computed(() => promise.cancelled.value || args[args.length - 1].value)\r\n            : promise.cancelled;\r\n        const removeWatch = watchCancel\r\n            ? watch(watchCancel, () => {\r\n                terminate();\r\n                res(undefined);\r\n            }, { immediate: false })\r\n            : NO_OP;\r\n        worker.addEventListener(\"message\", (e) => {\r\n            if (e.data[0]) {\r\n                res(e.data[1]);\r\n            }\r\n            else {\r\n                rej(e.data[1]);\r\n            }\r\n            terminate();\r\n        }, PASSIVE_EV);\r\n        worker.addEventListener(\"error\", (e) => {\r\n            terminate();\r\n            rej(e);\r\n        }, PASSIVE_EV);\r\n        worker.postMessage([...args]);\r\n        if (timeout) {\r\n            timeoutId = setTimeout(() => {\r\n                promise.cancel(`[WebWorker] timeout after ${timeout}ms`);\r\n            }, timeout);\r\n        }\r\n    }), {\r\n        lazy: true,\r\n        throwException: true,\r\n    });\r\n    return promise;\r\n}\n\nfunction useMatchMedia(query) {\r\n    const supported = isClient ? \"matchMedia\" in window : false;\r\n    let mediaQueryList = undefined;\r\n    let matches = undefined;\r\n    let remove = NO_OP;\r\n    if (supported) {\r\n        mediaQueryList = ref(matchMedia(query));\r\n        matches = ref(mediaQueryList.value.matches);\r\n        const process = (e) => {\r\n            matches.value = e.matches;\r\n        };\r\n        mediaQueryList.value.addEventListener(\"change\", process, PASSIVE_EV);\r\n        const remove = () => mediaQueryList.value.removeEventListener(\"change\", process);\r\n        onUnmounted(remove);\r\n    }\r\n    else {\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(\"[matchMedia] not supported\");\r\n        }\r\n        mediaQueryList = ref({});\r\n        matches = ref(false);\r\n    }\r\n    return {\r\n        supported,\r\n        mediaQueryList,\r\n        matches,\r\n        remove\r\n    };\r\n}\n\nfunction useSharedRef(name, defaultValue) {\r\n    const { addListener, send, close, supported } = useBroadcastChannel(name, () => disconnect());\r\n    const id = Date.now();\r\n    const master = ref(false);\r\n    const mind = ref(0 /* HIVE */);\r\n    const editable = computed(() => mind.value === 1 /* MASTER */ ? master.value : true);\r\n    // who's listening to this broadcast\r\n    const targets = ref([]);\r\n    const data = ref(defaultValue);\r\n    // if the state was updated by an event it sets to true\r\n    let updateState = false;\r\n    let masterId = undefined;\r\n    send({ type: 0 /* INIT */ });\r\n    const ping = () => send({ type: 5 /* PING */, id });\r\n    const disconnect = () => {\r\n        if (targets.value.length === 0)\r\n            return;\r\n        if (master.value) {\r\n            send({\r\n                type: 3 /* SET_MIND */,\r\n                mind: 1 /* MASTER */,\r\n                id: Math.min(...targets.value),\r\n            });\r\n        }\r\n        send({\r\n            type: 4 /* LEAVE */,\r\n            id,\r\n        });\r\n    };\r\n    const setMind = (t) => {\r\n        switch (t) {\r\n            case 1 /* MASTER */: {\r\n                master.value = true;\r\n                break;\r\n            }\r\n            case 0 /* HIVE */: {\r\n                master.value = false;\r\n                break;\r\n            }\r\n        }\r\n        mind.value = t;\r\n        send({\r\n            type: 3 /* SET_MIND */,\r\n            id: id,\r\n            mind: mind.value,\r\n        });\r\n    };\r\n    addListener((e) => {\r\n        switch (e.data.type) {\r\n            case 0 /* INIT */: {\r\n                send({\r\n                    type: 2 /* UPDATE */,\r\n                    value: data.value,\r\n                    mind: mind.value,\r\n                });\r\n                break;\r\n            }\r\n            case 4 /* LEAVE */: {\r\n                const index = targets.value.indexOf(e.data.id);\r\n                if (index >= 0) {\r\n                    targets.value.splice(index, 1);\r\n                }\r\n                // if master disconnects\r\n                if (masterId === e.data.id && targets.value.length > 0) {\r\n                    send({\r\n                        type: 3 /* SET_MIND */,\r\n                        mind: 1 /* MASTER */,\r\n                        id: Math.min(id, ...targets.value),\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 2 /* UPDATE */: {\r\n                updateState = true;\r\n                data.value = e.data.value;\r\n                mind.value = e.data.mind;\r\n                break;\r\n            }\r\n            case 3 /* SET_MIND */: {\r\n                mind.value = e.data.mind;\r\n                masterId =\r\n                    (e.data.mind === 1 /* MASTER */ && e.data.id) || undefined;\r\n                master.value = masterId === id;\r\n                if (master.value) {\r\n                    targets.value = [];\r\n                    ping();\r\n                }\r\n                break;\r\n            }\r\n            case 5 /* PING */: {\r\n                targets.value = [e.data.id];\r\n                send({\r\n                    type: 6 /* PONG */,\r\n                    id,\r\n                });\r\n                break;\r\n            }\r\n            case 6 /* PONG */: {\r\n                targets.value.push(e.data.id);\r\n                break;\r\n            }\r\n        }\r\n    }, PASSIVE_EV);\r\n    ping();\r\n    watch(data, (v, o) => {\r\n        if (updateState) {\r\n            updateState = false;\r\n            return;\r\n        }\r\n        // mind is set to MASTER and we are not master, we shouldn't update!\r\n        if (mind.value === 1 /* MASTER */ && master.value === false) {\r\n            updateState = true;\r\n            data.value = o;\r\n            return;\r\n        }\r\n        send({\r\n            type: 2 /* UPDATE */,\r\n            mind: mind.value,\r\n            value: isObject(v) ? { ...v } : v,\r\n        });\r\n        updateState = false;\r\n    }, { deep: true, immediate: false });\r\n    if (isClient) {\r\n        window.addEventListener(\"unload\", disconnect, PASSIVE_EV);\r\n    }\r\n    onUnmounted(() => {\r\n        disconnect();\r\n        close();\r\n    });\r\n    return {\r\n        supported,\r\n        id,\r\n        data,\r\n        master,\r\n        mind,\r\n        editable,\r\n        targets,\r\n        ping,\r\n        setMind,\r\n        addListener: addListener,\r\n    };\r\n}\r\nlet shared = undefined;\r\nfunction refShared(defaultValue, id) {\r\n    const vm = getCurrentInstance();\r\n    const name = id\r\n        ? id\r\n        : vm.vnode.scopeId; // TODO test this :/ NOTE @vue/runtime-core might be different\r\n    if (!name) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(\"[refShared] please assign an id, returning `ref`\");\r\n        }\r\n        return ref(defaultValue);\r\n    }\r\n    /* istanbul ignore else  */\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (!shared) {\r\n            shared = new Set();\r\n        }\r\n        if (shared.has(name)) {\r\n            console.warn(\"[refShared] You can only have one refShared per component, if you need more please assign pass an id refShared(defaultValue, id)\");\r\n        }\r\n        shared.add(name);\r\n    }\r\n    const { data, supported } = useSharedRef(name, defaultValue);\r\n    /* istanbul ignore next  */\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (!supported) {\r\n            console.warn(\"[refShared] is dependent of BroadcastChannel\");\r\n        }\r\n    }\r\n    return data;\r\n}\n\nconst SCROLL_LOCK_CLASS = \"no-scroll\";\r\nfunction useLockScroll(selectorElements, classOptions) {\r\n    const elements = (isString(selectorElements)\r\n        ? ref([]) // it will be resolved when mounted\r\n        : isArray(unref(selectorElements))\r\n            ? wrap(selectorElements)\r\n            : wrap([selectorElements]));\r\n    const options = isString(classOptions)\r\n        ? { lockedClass: classOptions, auto: true }\r\n        : classOptions || { auto: true };\r\n    if (!options.lockedClass) {\r\n        options.lockedClass = SCROLL_LOCK_CLASS;\r\n    }\r\n    const locked = ref(false);\r\n    // NOTE issues on Vue3 because of the `watch.deep`, we wrap all elements\r\n    const tracked = computed(() => elements.value.map(x => ref(x)));\r\n    const remove = watch([locked, tracked], ([l, els], [oldLocked, oldElements]) => {\r\n        for (const refEl of els) {\r\n            const el = unwrap(refEl);\r\n            // istanbul ignore else\r\n            if (options.lockedClass) {\r\n                // istanbul ignore else\r\n                if (!el) {\r\n                    // istanbul ignore else\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        console.warn(\"[useLockScroll] element is undefined\");\r\n                    }\r\n                    return;\r\n                }\r\n                el.classList.toggle(options.lockedClass, l);\r\n            }\r\n            if (options.onChange) {\r\n                if (oldLocked !== l || !oldElements.find(x => unwrap(x) === el))\r\n                    options.onChange(el, l);\r\n            }\r\n        }\r\n    }, { flush: \"sync\", deep: false });\r\n    const lock = () => (locked.value = true);\r\n    const unlock = () => (locked.value = false);\r\n    if (isString(selectorElements)) {\r\n        onMounted(() => (elements.value = Array.from(document.querySelectorAll(selectorElements))));\r\n    }\r\n    if (options.auto !== false) {\r\n        onMounted(lock);\r\n        onActivated(lock);\r\n        onDeactivated(unlock);\r\n        onBeforeUnmount(unlock);\r\n    }\r\n    return {\r\n        locked,\r\n        lock,\r\n        unlock,\r\n        remove\r\n    };\r\n}\n\nfunction useVModel(props, name) {\r\n    const instance = getCurrentInstance();\r\n    if (!instance) {\r\n        throw new Error(\"useVModel must be called from the setup or lifecycle hook methods.\");\r\n    }\r\n    return computed({\r\n        get() {\r\n            return props[name];\r\n        },\r\n        set(v) {\r\n            // @ts-ignore when building v2 the instance doesn't have `emit`\r\n            instance.emit(`update:${name}`, v);\r\n        },\r\n    });\r\n}\n\nfunction injectFactory(key, defaultValueFactory) {\r\n    return inject(key, defaultValueFactory, true);\r\n}\n\nfunction useInterval(callback, ms, ...args) {\r\n    let intervalId = undefined;\r\n    const start = (_ms, ..._args) => {\r\n        remove();\r\n        if (!_ms && !ms) {\r\n            return;\r\n        }\r\n        const m = (_ms || ms);\r\n        return (intervalId = setInterval(callback, m, ...(_args && _args.length ? _args : args)));\r\n    };\r\n    const remove = () => {\r\n        if (!intervalId)\r\n            return;\r\n        clearInterval(intervalId);\r\n        intervalId = undefined;\r\n    };\r\n    if (isNumber(ms)) {\r\n        start();\r\n    }\r\n    onUnmounted(remove);\r\n    return { remove, start };\r\n}\r\n// TODO move this:  type checkings\r\n// useInterval((x: number) => {}).start();\r\n// useInterval((x: number) => {}, 100, 1).start();\r\n// useInterval(() => {}).start();\n\nfunction refDebounced(value, delay) {\r\n    let [v, d] = arguments.length === 1 && isNumber(value) && typeof delay === \"undefined\"\r\n        ? [ref(), value]\r\n        : [ref(value), delay];\r\n    return customRef((track, trigger) => ({\r\n        get() {\r\n            track();\r\n            return v.value;\r\n        },\r\n        set: debounce(val => {\r\n            v.value = val;\r\n            trigger();\r\n        }, d)\r\n    }));\r\n}\n\nfunction intlDateFormatExtractArguments(localesOptions, opts) {\r\n    const wrappedOpts = wrap(opts);\r\n    const wrappedLocalesOptions = wrap(localesOptions);\r\n    return isObject(wrappedOpts.value) || isRef(opts)\r\n        ? [\r\n            wrappedLocalesOptions.value !== undefined\r\n                ? wrappedLocalesOptions\r\n                : undefined,\r\n            wrappedOpts,\r\n        ]\r\n        : isObject(wrappedLocalesOptions.value) &&\r\n            !isArray(wrappedLocalesOptions.value) &&\r\n            !isString(wrappedLocalesOptions.value)\r\n            ? [undefined, wrappedLocalesOptions]\r\n            : [\r\n                wrappedLocalesOptions.value\r\n                    ? wrappedLocalesOptions\r\n                    : undefined,\r\n                undefined,\r\n            ];\r\n}\n\nfunction useIntlDateTimeFormat(localesOptions, opts) {\r\n    const [locales, options] = intlDateFormatExtractArguments(localesOptions, opts);\r\n    const formatter = computed(() => new Intl.DateTimeFormat(unwrap(locales), unwrap(options)));\r\n    const formatString = (value, overrideOpts, overrideLocale) => {\r\n        const f = overrideOpts || overrideLocale\r\n            ? new Intl.DateTimeFormat(unwrap(overrideLocale) ||\r\n                unwrap(locales), { ...unwrap(options), ...unwrap(overrideOpts) })\r\n            : formatter.value;\r\n        const v = unwrap(value);\r\n        return f.format(isString(v) ? new Date(v) : v);\r\n    };\r\n    const format = (value, overrideOpts, overrideLocale) => computed(() => formatString(value, overrideOpts, overrideLocale));\r\n    return {\r\n        format,\r\n        formatString,\r\n        formatter,\r\n    };\r\n}\n\nfunction useIntlNumberFormat(localesOptions, opts) {\r\n    const [locales, options] = intlDateFormatExtractArguments(localesOptions, opts);\r\n    const formatter = computed(() => new Intl.NumberFormat(unwrap(locales), unwrap(options)));\r\n    const formatString = (value, overrideOpts, overrideLocale) => {\r\n        const f = overrideOpts || overrideLocale\r\n            ? new Intl.NumberFormat(unwrap(overrideLocale) ||\r\n                unwrap(locales), { ...unwrap(options), ...unwrap(overrideOpts) })\r\n            : formatter.value;\r\n        return f.format(unwrap(value));\r\n    };\r\n    const format = (value, overrideOpts, overrideLocale) => computed(() => formatString(value, overrideOpts, overrideLocale));\r\n    return {\r\n        format,\r\n        formatString,\r\n        formatter\r\n    };\r\n}\n\nfunction useCurrencyFormat(currencyCodeOptions, localesOptions, opts) {\r\n    const unwrapCodeOptions = unwrap(currencyCodeOptions);\r\n    const hasCurrency = !isObject(unwrapCodeOptions);\r\n    const currencyCode = hasCurrency\r\n        ? currencyCodeOptions\r\n        : computed(() => {\r\n            const o = unwrap(currencyCodeOptions);\r\n            return o.currency;\r\n        });\r\n    const [locales, argOptions] = intlDateFormatExtractArguments(localesOptions, hasCurrency\r\n        ? opts\r\n        : currencyCodeOptions);\r\n    const options = computed(() => {\r\n        const opts = unwrap(argOptions) || {};\r\n        const currency = unwrap(currencyCode) || opts.currency;\r\n        return {\r\n            style: \"currency\",\r\n            ...opts,\r\n            currency\r\n        };\r\n    });\r\n    const numberFormat = useIntlNumberFormat(locales);\r\n    const formatString = (amount, currency, display, opts, overrideLocale) => {\r\n        const o = { ...options.value, ...unwrap(opts) };\r\n        const c = unwrap(currency) || o.currency;\r\n        const d = unwrap(display) || o.currencyDisplay;\r\n        // istanbul ignore else\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (!c) {\r\n                console.error(\"[useCurrencyFormat] No currency provided.\");\r\n                return \"\";\r\n            }\r\n            if (o.style !== \"currency\") {\r\n                console.warn(\"[useCurrencyFormat] invalid style passed in options, please leave it undefined.\");\r\n            }\r\n        }\r\n        return numberFormat.formatString(amount, {\r\n            ...o,\r\n            currency: c,\r\n            currencyDisplay: d\r\n        }, overrideLocale);\r\n    };\r\n    const format = (amount, currency, display, opts, overrideLocale) => {\r\n        return computed(() => formatString(amount, currency, display, opts, overrideLocale));\r\n    };\r\n    return {\r\n        format,\r\n        formatString\r\n    };\r\n}\n\nfunction getBreakpointWidth(bp) {\r\n    if (!bp)\r\n        return undefined;\r\n    if (isNumber(bp))\r\n        return bp;\r\n    return isValidWidthBreakpoint(bp);\r\n}\r\nconst isValidWidthBreakpoint = (bp) => {\r\n    const m = bp.match(/^(\\d+)px$/);\r\n    if (m) {\r\n        return +m[1];\r\n    }\r\n    return undefined;\r\n};\r\nfunction useBreakpoint(breakpoints) {\r\n    const result = {};\r\n    const map = new Map();\r\n    const current = ref();\r\n    let sorted = [];\r\n    const removeMedia = [];\r\n    for (const key in breakpoints) {\r\n        const bp = breakpoints[key];\r\n        const width = getBreakpointWidth(bp);\r\n        if (width !== undefined) {\r\n            const r = ref(false);\r\n            result[key] = r;\r\n            map.set(width, {\r\n                name: key,\r\n                valid: r,\r\n            });\r\n            sorted.push(width);\r\n        }\r\n        else {\r\n            const { matches, remove } = useMatchMedia(bp);\r\n            result[key] = matches;\r\n            removeMedia.push(remove);\r\n        }\r\n    }\r\n    sorted = sorted.sort((a, b) => b - a);\r\n    const resize = isClient\r\n        ? () => {\r\n            const width = window.innerWidth;\r\n            let c = undefined;\r\n            for (let i = 0; i < sorted.length; i++) {\r\n                const bp = sorted[i];\r\n                const r = map.get(bp);\r\n                r.valid.value = width >= bp;\r\n                if (width >= bp && c === undefined) {\r\n                    c = r.name;\r\n                }\r\n            }\r\n            current.value = c;\r\n        }\r\n        : NO_OP;\r\n    const processResize = useDebounce(resize, 10);\r\n    const remove = isClient\r\n        ? () => window.removeEventListener(\"resize\", processResize)\r\n        : NO_OP;\r\n    if (isClient) {\r\n        onMounted(() => {\r\n            resize();\r\n            window.addEventListener(\"resize\", processResize, PASSIVE_EV);\r\n        });\r\n        onUnmounted(() => {\r\n            remove();\r\n            removeMedia.forEach((x) => x());\r\n        });\r\n    }\r\n    return {\r\n        ...result,\r\n        remove,\r\n        current,\r\n    };\r\n}\n\nfunction useBreakpointChrome() {\r\n    return useBreakpoint({\r\n        mobileS: 320,\r\n        mobileM: 375,\r\n        mobileL: 425,\r\n        tablet: 768,\r\n        laptop: 1024,\r\n        laptopL: 1440,\r\n        desktop4K: 2560\r\n    });\r\n}\n\n// istanbul ignore next\r\nconst BREAKPOINT_TAILWIND_KEY = Symbol(((process.env.NODE_ENV !== 'production') && \"TAILWIND_BREAKPOINTS\") || ``);\r\nconst defaultTailwindBreakpoint = {\r\n    sm: 640,\r\n    md: 768,\r\n    lg: 1024,\r\n    xl: 1280,\r\n};\r\nfunction isTailwind(t) {\r\n    return isObject(t) && isObject(t.theme) && isObject(t.theme.screens);\r\n}\r\nfunction isRawScreen(t) {\r\n    return isObject(t) && isString(t.raw);\r\n}\r\nfunction isRangeScreen(t) {\r\n    if (!isObject(t))\r\n        return false;\r\n    return (isString(t.min) || isString(t.max) || isNumber(t.min) || isNumber(t.max));\r\n}\r\n/**\r\n * Sanitize width value, if number is passed it will append `px`\r\n * @param s width value\r\n */\r\nfunction sanitizeWidth(s) {\r\n    return isNumber(s) ? s + \"px\" : s;\r\n}\r\nfunction screenRangeToBreakpoint(s) {\r\n    if (!isRangeScreen(s)) {\r\n        // istanbul ignore else\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(\"[useBreakpointTailwind] screen range provided is not valid\");\r\n        }\r\n        return \"\";\r\n    }\r\n    const condition = [\r\n        s.max && `max-width: ${sanitizeWidth(s.max)}`,\r\n        s.min && `min-width: ${sanitizeWidth(s.min)}`,\r\n    ]\r\n        .filter(Boolean)\r\n        .join(\" and \");\r\n    return `(${condition})`;\r\n}\r\nfunction screenToBreakpoint(s) {\r\n    const conditions = [];\r\n    if (isArray(s)) {\r\n        const bks = s.map(screenToBreakpoint);\r\n        for (let i = 0; i < bks.length; i++) {\r\n            const b = bks[i];\r\n            conditions.push(...b);\r\n        }\r\n    }\r\n    else if (isRawScreen(s)) {\r\n        conditions.push(s.raw);\r\n    }\r\n    else if (isRangeScreen(s)) {\r\n        conditions.push(screenRangeToBreakpoint(s));\r\n    }\r\n    else if (isString(s) || isNumber(s)) {\r\n        conditions.push(`(min-width: ${sanitizeWidth(s)})`);\r\n    }\r\n    else {\r\n        // istanbul ignore else\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(\"[useBreakpointTailwind] unknown type used for the breakpoint`\");\r\n        }\r\n    }\r\n    return conditions;\r\n}\r\nfunction setBreakpointTailwindCSS(breakpoints) {\r\n    const bk = isTailwind(breakpoints) ? breakpoints.theme.screens : breakpoints;\r\n    if (isTailwind(breakpoints)) {\r\n        for (const k in bk) {\r\n            // istanbul ignore else\r\n            if (bk.hasOwnProperty(k)) {\r\n                const v = bk[k];\r\n                if (isObject(v)) {\r\n                    bk[k] = screenToBreakpoint(bk[k]).join(\" or \");\r\n                }\r\n                else if (isString(v)) {\r\n                    if (!v.endsWith(\"px\")) {\r\n                        bk[k] = screenToBreakpoint(bk[k]).join(\" or \");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const bp = useBreakpoint(bk);\r\n    provide(BREAKPOINT_TAILWIND_KEY, bp);\r\n    return bp;\r\n}\r\nfunction useBreakpointTailwindCSS(config) {\r\n    return injectFactory(BREAKPOINT_TAILWIND_KEY, () => setBreakpointTailwindCSS(config || defaultTailwindBreakpoint));\r\n}\n\nconst STORAGE_TEST_KEY = (process.env.NODE_ENV !== 'production') ? \"__storage_test__\" : \":$\";\r\n/* istanbul ignore next */\r\nfunction isQuotaExceededError(e, storage) {\r\n    return (e instanceof DOMException &&\r\n        // everything except Firefox\r\n        (e.code === 22 ||\r\n            // Firefox\r\n            e.code === 1014 ||\r\n            // test name field too, because code might not be present\r\n            // everything except Firefox\r\n            e.name === \"QuotaExceededError\" ||\r\n            // Firefox\r\n            e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\r\n        // acknowledge QuotaExceededError only if there's something already stored\r\n        ((storage && storage.length !== 0) || false));\r\n}\r\n// based on https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\r\nfunction storageAvailable(storage) {\r\n    try {\r\n        if (!storage) {\r\n            return false;\r\n        }\r\n        const x = STORAGE_TEST_KEY;\r\n        storage.setItem(x, x);\r\n        storage.removeItem(x);\r\n        return true;\r\n    }\r\n    catch (e) {\r\n        return isQuotaExceededError(e, storage);\r\n    }\r\n}\r\nfunction safeParse(serializer, value) {\r\n    try {\r\n        return serializer.parse(value);\r\n    }\r\n    catch {\r\n        return value;\r\n    }\r\n}\r\nlet storageMap = undefined;\r\nfunction useWebStorage(type, serializer = JSON, ms = 10) {\r\n    const storage = isClient ? window[type] : undefined;\r\n    const supported = storageAvailable(storage);\r\n    const remove = () => storageMap.delete(type);\r\n    if (!storageMap) {\r\n        storageMap = new Map();\r\n        if (isClient) {\r\n            window.addEventListener(\"storage\", (e) => {\r\n                if (e.newValue === e.oldValue) {\r\n                    return;\r\n                }\r\n                let webStore = storageMap.get(\"localStorage\");\r\n                if (e.storageArea === window.localStorage) {\r\n                    webStore = storageMap.get(\"localStorage\");\r\n                }\r\n                else {\r\n                    webStore = storageMap.get(\"sessionStorage\");\r\n                }\r\n                if (webStore && Object.keys(webStore.$syncKeys).length > 0) {\r\n                    if (e.key === null) {\r\n                        webStore.clear();\r\n                    }\r\n                    else if (webStore.$syncKeys[e.key]) {\r\n                        if (e.newValue === null) {\r\n                            webStore.removeItem(e.key);\r\n                        }\r\n                        else {\r\n                            webStore.updateItem(e.key, e.newValue);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    let store = storageMap.get(type);\r\n    let quotaError;\r\n    if (supported && storage) {\r\n        if (!store) {\r\n            quotaError = ref(false);\r\n            store = {\r\n                $refMap: new Map(),\r\n                $watchHandlers: new Map(),\r\n                $syncKeys: {},\r\n                $quotaError: quotaError,\r\n                key: storage.key,\r\n                length: storage.length,\r\n                setSync(key, sync) {\r\n                    if (sync) {\r\n                        this.$syncKeys[key] = true;\r\n                    }\r\n                    else {\r\n                        delete this.$syncKeys[key];\r\n                    }\r\n                },\r\n                save(key, value) {\r\n                    try {\r\n                        const oldValue = storage.getItem(key);\r\n                        const data = isString(value) ? value : serializer.stringify(value);\r\n                        storage.setItem(key, data);\r\n                        if (oldValue !== data && isClient && store.$syncKeys[key]) {\r\n                            window.dispatchEvent(new StorageEvent(key, {\r\n                                newValue: data,\r\n                                oldValue,\r\n                                storageArea: storage,\r\n                            }));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        quotaError.value = isQuotaExceededError(e, storage);\r\n                    }\r\n                },\r\n                clear() {\r\n                    this.$refMap.forEach((_, k) => this.removeItem(k));\r\n                },\r\n                removeItem(k) {\r\n                    const item = this.$refMap.get(k);\r\n                    // remove the object value if item deleted\r\n                    if (item) {\r\n                        item.value = undefined;\r\n                    }\r\n                    // clear the watch\r\n                    const stop = this.$watchHandlers.get(k);\r\n                    if (stop) {\r\n                        stop();\r\n                    }\r\n                    delete this.$syncKeys[k];\r\n                    this.$refMap.delete(k);\r\n                    storage.removeItem(k);\r\n                },\r\n                getItem(k) {\r\n                    /**\r\n                     * NOTE seems if the element who created the `ref` gets destroyed all the watchers assigned will be also disposed\r\n                     * making returning of the cached `ref` invalid\r\n                     */\r\n                    const data = storage.getItem(k);\r\n                    if (!data) {\r\n                        return null;\r\n                    }\r\n                    return this.setItem(k, safeParse(serializer, data));\r\n                },\r\n                getRef(k) {\r\n                    const item = ref();\r\n                    let keyWatch = watch(wrap(k), (k) => {\r\n                        const data = storage.getItem(k);\r\n                        if (!data) {\r\n                            return (item.value = null);\r\n                        }\r\n                        item.value = safeParse(serializer, data);\r\n                    }, {\r\n                        immediate: true,\r\n                        flush: \"sync\",\r\n                    });\r\n                    let valueWatch = watch(item, debounce((i) => {\r\n                        this.save(unwrap(k), i);\r\n                    }, ms), { deep: true, flush: \"sync\" });\r\n                    // used to reference to this ref, since `k` change change we need to generate one\r\n                    const fakeKey = Math.random().toString();\r\n                    this.$watchHandlers.set(fakeKey, () => {\r\n                        keyWatch();\r\n                        valueWatch();\r\n                    });\r\n                    this.$refMap.set(fakeKey, item);\r\n                    return item;\r\n                },\r\n                setItem(k, v) {\r\n                    const reference = wrap(v);\r\n                    this.$refMap.set(k, reference);\r\n                    this.save(k, v);\r\n                    // @ts-ignore\r\n                    const stop = watch(reference, debounce((r) => {\r\n                        this.save(k, r);\r\n                    }, ms), {\r\n                        immediate: false,\r\n                        deep: true,\r\n                    });\r\n                    this.$watchHandlers.set(k, stop);\r\n                    return reference;\r\n                },\r\n                updateItem(k, data) {\r\n                    let r = this.$refMap.get(k);\r\n                    if (r) {\r\n                        r.value = safeParse(serializer, data);\r\n                    }\r\n                },\r\n            };\r\n            storageMap.set(type, store);\r\n        }\r\n        else {\r\n            quotaError = store.$quotaError;\r\n        }\r\n    }\r\n    else {\r\n        quotaError = ref(false);\r\n        store = {};\r\n    }\r\n    return {\r\n        supported,\r\n        quotaError,\r\n        store,\r\n        remove,\r\n    };\r\n}\n\nfunction useLocalStorage(key, defaultValue, sync) {\r\n    const { supported, store } = useWebStorage(\"localStorage\");\r\n    let remove = NO_OP;\r\n    let clear = NO_OP;\r\n    let setSync = NO_OP;\r\n    let storage = undefined;\r\n    if (supported && store) {\r\n        setSync = (s) => store.setSync(unwrap(key), s);\r\n        remove = () => store.removeItem(unwrap(key));\r\n        clear = () => store.clear();\r\n        storage = store.getRef(key);\r\n        if (storage.value == null) {\r\n            store.save(unwrap(key), defaultValue);\r\n            storage.value = defaultValue;\r\n        }\r\n        watchEffect(() => {\r\n            if (sync !== false) {\r\n                setSync(true);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(\"[localStorage] is not available\");\r\n        }\r\n        storage = ref(defaultValue);\r\n    }\r\n    return {\r\n        supported,\r\n        storage,\r\n        clear,\r\n        remove,\r\n        setSync,\r\n    };\r\n}\n\nfunction useSessionStorage(key, defaultValue, sync) {\r\n    const { supported, store } = useWebStorage(\"sessionStorage\");\r\n    let remove = NO_OP;\r\n    let clear = NO_OP;\r\n    let setSync = FALSE_OP;\r\n    let storage = undefined;\r\n    if (supported && store) {\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            setSync = () => console.warn(\"sync is not supported, please `useLocalStorage` instead\");\r\n            if (sync) {\r\n                setSync(sync);\r\n            }\r\n        }\r\n        remove = () => store.removeItem(unwrap(key));\r\n        clear = () => store.clear();\r\n        storage = store.getRef(key);\r\n        if (storage.value == null) {\r\n            store.save(unwrap(key), defaultValue);\r\n            storage.value = defaultValue;\r\n        }\r\n    }\r\n    else {\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(\"[sessionStorage] is not available\");\r\n        }\r\n        storage = ref(defaultValue);\r\n    }\r\n    return {\r\n        supported,\r\n        storage,\r\n        clear,\r\n        remove,\r\n        setSync,\r\n    };\r\n}\n\nlet canUseLocalStorage = undefined;\r\nfunction useStorage(key, defaultValue, sync) {\r\n    if (canUseLocalStorage === undefined) {\r\n        canUseLocalStorage = useWebStorage(\"localStorage\").supported;\r\n    }\r\n    return canUseLocalStorage\r\n        ? useLocalStorage(key, defaultValue, sync)\r\n        : useSessionStorage(key, defaultValue, sync);\r\n}\n\n/**\r\n * Create a pagination controller based on the arguments\r\n * @param options -\r\n */\r\nfunction usePagination(options) {\r\n    const _currentPage = wrap(options.currentPage);\r\n    const _pageSize = wrap(options.pageSize);\r\n    const _offset = ref(0);\r\n    const total = wrap(options.total);\r\n    const offset = computed({\r\n        get() {\r\n            return _offset.value;\r\n        },\r\n        set(v) {\r\n            if (!isNumber(v)) {\r\n                /* istanbul ignore else */\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    console.warn(`[offset] expected number but got: '${typeof v}' value: '${v}'`);\r\n                }\r\n                return;\r\n            }\r\n            _offset.value = Math.min(v, total.value);\r\n        }\r\n    });\r\n    const currentPage = computed({\r\n        get() {\r\n            return _currentPage.value;\r\n        },\r\n        set(v) {\r\n            if (!isNumber(v)) {\r\n                /* istanbul ignore else  */\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    console.warn(`[currentPage] expected number but got: '${typeof v}' value: '${v}'`);\r\n                }\r\n                return;\r\n            }\r\n            _currentPage.value = minMax(v, 1, lastPage.value);\r\n            // set the offset\r\n            offset.value = (_currentPage.value - 1) * pageSize.value;\r\n        }\r\n    });\r\n    const pageSize = computed({\r\n        get() {\r\n            return _pageSize.value;\r\n        },\r\n        set(v) {\r\n            if (!isNumber(v)) {\r\n                /* istanbul ignore else */\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    console.warn(`[pageSize] expected number but got: '${typeof v}' value: '${v}'`);\r\n                }\r\n                return;\r\n            }\r\n            _pageSize.value = v;\r\n        }\r\n    });\r\n    const lastPage = computed(() => Math.ceil(total.value / pageSize.value));\r\n    // make sure the current page is the correct value\r\n    currentPage.value = _currentPage.value;\r\n    const prev = () => --currentPage.value;\r\n    const next = () => ++currentPage.value;\r\n    const first = () => (currentPage.value = 1);\r\n    const last = () => (currentPage.value = lastPage.value);\r\n    watch([total, pageSize], _ => {\r\n        if (currentPage.value > lastPage.value) {\r\n            currentPage.value = lastPage.value;\r\n        }\r\n    }, { immediate: false } // no need to run on first render\r\n    );\r\n    return {\r\n        // Mutable state\r\n        pageSize,\r\n        total,\r\n        currentPage,\r\n        offset,\r\n        // Computed\r\n        lastPage,\r\n        // Functions\r\n        next,\r\n        prev,\r\n        first,\r\n        last\r\n    };\r\n}\n\nfunction useArrayPagination(array, options) {\r\n    const arrayRef = wrap(array);\r\n    const pagination = usePagination({\r\n        ...{\r\n            currentPage: 1,\r\n            pageSize: 10\r\n        },\r\n        ...options,\r\n        total: computed(() => arrayRef.value.length)\r\n    });\r\n    const result = computed(() => {\r\n        const array = arrayRef.value;\r\n        if (!Array.isArray(array))\r\n            return [];\r\n        return array.slice(pagination.offset.value, pagination.offset.value + pagination.pageSize.value);\r\n    });\r\n    return {\r\n        ...pagination,\r\n        result\r\n    };\r\n}\n\n/**\r\n * Reactive custom timer with specified refresh rate\r\n * @param options - Configuration\r\n */\r\nfunction useNow(options) {\r\n    const SYNC_MS = 1000;\r\n    const ms = (options && options.refreshMs) || SYNC_MS;\r\n    const sync = options && isBoolean(options.sync) ? options.sync : true;\r\n    const fn = (options && isFunction(options.timeFn) && options.timeFn) || Date.now;\r\n    /* istanbul ignore else */\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (options && options.timeFn && isFunction(options.timeFn) === false) {\r\n            console.warn(\"[useNow] timeFn param must be Function\");\r\n        }\r\n    }\r\n    let handler = undefined;\r\n    let timeoutHandler = undefined;\r\n    const now = ref(fn());\r\n    const remove = () => {\r\n        clearInterval(handler);\r\n        clearTimeout(timeoutHandler);\r\n    };\r\n    /* istanbul ignore next */\r\n    const start = isClient\r\n        ? () => (handler = setInterval(() => (now.value = fn()), ms))\r\n        : NO_OP;\r\n    if (sync) {\r\n        const offset = SYNC_MS - (now.value - Math.floor(now.value / SYNC_MS) * SYNC_MS);\r\n        timeoutHandler = setTimeout(start, offset);\r\n    }\r\n    else {\r\n        start();\r\n    }\r\n    onUnmounted(remove);\r\n    return {\r\n        now,\r\n        remove\r\n    };\r\n}\n\n/**\r\n * Reactive `Date.now()` with specified refresh rate\r\n * @param options - Configuration\r\n */\r\nfunction useDateNow(options) {\r\n    const refreshMs = (options && options.refreshMs) || 1000;\r\n    const sync = options && isBoolean(options.sync) ? options.sync : true;\r\n    return useNow({\r\n        refreshMs,\r\n        sync,\r\n        timeFn: Date.now\r\n    });\r\n}\n\n/**\r\n * Reactive `performance.now()` with specified refresh rate\r\n * @param options - Configuration\r\n */\r\nfunction usePerformanceNow(options) {\r\n    const refreshMs = (options && options.refreshMs) || 1000;\r\n    const sync = options && isBoolean(options.sync) ? options.sync : true;\r\n    return useNow({\r\n        refreshMs,\r\n        sync,\r\n        timeFn: () => performance.now()\r\n    });\r\n}\n\nfunction useFormat(format, args) {\r\n    return computed(() => {\r\n        const f = unwrap(format);\r\n        if (!args) {\r\n            return f;\r\n        }\r\n        const r = isRef(args) ? reactive(args.value) : reactive(args);\r\n        const regEx = /({?{[\\w\\s]*}?})/g;\r\n        return f.replace(regEx, s => {\r\n            const k = s\r\n                .replace(\"{\", \"\")\r\n                .replace(\"}\", \"\")\r\n                .trim();\r\n            // ignore if {{ }}\r\n            if (s[0] === s[1] && s[0] === \"{\") {\r\n                return `${k}`;\r\n            }\r\n            const v = isArray(r) ? r[+k] : r[k];\r\n            return v === undefined ? s : `${unwrap(v)}`;\r\n        });\r\n    });\r\n}\n\n/**\r\n * Retrieve object value based on string path\r\n * @param source - Source object to retrieve path\r\n * @param path - string path to value\r\n * @param separator - path separator, default '.'\r\n * @param notFoundReturn - not found handler\r\n */\r\nfunction usePath(source, path, separator = \".\", notFoundReturn = NO_OP) {\r\n    return computed(() => {\r\n        const s = unwrap(source);\r\n        const p = unwrap(path);\r\n        if (s === undefined)\r\n            return notFoundReturn(p, s, p, s);\r\n        if (!p) {\r\n            return s;\r\n        }\r\n        const fragments = p.split(separator);\r\n        let c = s;\r\n        for (let i = 0; i < fragments.length; i++) {\r\n            let fragmentPath = fragments[i];\r\n            if (fragmentPath[fragmentPath.length - 1] === \"]\") {\r\n                const r = /\\[[`'\"]?([^`'\"\\]]*)[`'\"]?\\]/g;\r\n                let path = fragmentPath;\r\n                let m = r.exec(path);\r\n                if (m) {\r\n                    let lastLen = m[0].length;\r\n                    let lastIndex = m.index - lastLen;\r\n                    let mi = 1;\r\n                    do {\r\n                        if (lastIndex + lastLen !== m.index) {\r\n                            // istanbul ignore else\r\n                            if ((process.env.NODE_ENV !== 'production')) {\r\n                                console.warn(`[usePath] invalid path \"${fragments[i]}\"`);\r\n                            }\r\n                        }\r\n                        lastIndex = m.index;\r\n                        lastLen = m[0].length;\r\n                        fragmentPath = fragmentPath.slice(0, -m[0].length);\r\n                        fragments.splice(i + mi, 0, m[1]);\r\n                        ++mi;\r\n                    } while ((m = r.exec(path)));\r\n                    // if the fragmentPath is empty, eg: [1][1]\r\n                    // we should continue until the next path\r\n                    if (!fragmentPath && path[0] === \"[\" && path.length > 2) {\r\n                        continue;\r\n                    }\r\n                }\r\n                else {\r\n                    fragmentPath = \"\";\r\n                    console.warn(`[usePath] invalid path provided \"${path}\"`);\r\n                }\r\n            }\r\n            if (isObject(c)) {\r\n                if (!fragmentPath) {\r\n                    // istanbul ignore else\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        console.warn(`Path \"${fragments\r\n                            .slice(0, i + 1)\r\n                            .join(separator)}\" doesn't exist on:`, source);\r\n                    }\r\n                    return notFoundReturn(fragments.slice(0, i + 1).join(separator), c, p, s);\r\n                }\r\n                c = c[fragmentPath];\r\n            }\r\n            else {\r\n                // istanbul ignore else\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    console.warn(`Path \"${fragments\r\n                        .slice(0, i + 1)\r\n                        .join(separator)}\" doesn't exist on:`, source);\r\n                }\r\n                return notFoundReturn(fragments.slice(0, i + 1).join(separator), c, p, s);\r\n            }\r\n            if (!c) {\r\n                // istanbul ignore else\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    console.warn(`Path \"${fragments\r\n                        .slice(0, i + 1)\r\n                        .join(separator)}\" doesn't exist on:`, source);\r\n                }\r\n                return notFoundReturn(fragments.slice(0, i + 1).join(separator), c, p, s);\r\n            }\r\n        }\r\n        return c;\r\n    });\r\n}\n\n/* /Output */\r\nfunction isValidation(v) {\r\n    return typeof v.$value !== \"undefined\";\r\n}\r\nfunction isValidatorObject(v) {\r\n    return isObject(v);\r\n}\r\nconst buildValidationFunction = (r, f, m, handlers) => {\r\n    const $promise = ref(null);\r\n    const $pending = ref(false);\r\n    const $error = ref();\r\n    const $invalid = ref(false);\r\n    let context = undefined;\r\n    const onChange = (r) => {\r\n        const p = async () => {\r\n            try {\r\n                $pending.value = true;\r\n                const result = f(r, context);\r\n                if (isPromise(result)) {\r\n                    $invalid.value = !(await result);\r\n                }\r\n                else {\r\n                    $invalid.value = !result;\r\n                }\r\n                // @ts-ignore\r\n                $error.value = $invalid.value ? m.value || true : undefined;\r\n            }\r\n            catch (e) {\r\n                $invalid.value = true;\r\n                throw e;\r\n            }\r\n            finally {\r\n                $pending.value = false;\r\n            }\r\n        };\r\n        $promise.value = p().catch((x) => {\r\n            $error.value = unwrap(x);\r\n            $invalid.value = true;\r\n            return x;\r\n        });\r\n    };\r\n    handlers.push((ctx) => {\r\n        context = ctx;\r\n        watch(() => {\r\n            try {\r\n                // keep track on the external dependencies\r\n                f(r.value, context);\r\n            }\r\n            catch (e) {\r\n                // ignore error\r\n            }\r\n            return r.value;\r\n        }, onChange, { deep: true, immediate: true });\r\n    });\r\n    function $touch() {\r\n        onChange(r.value);\r\n    }\r\n    return {\r\n        $promise,\r\n        $pending,\r\n        $invalid,\r\n        $error,\r\n        $touch,\r\n    };\r\n};\r\nconst buildValidationValue = (r, v, handlers) => {\r\n    const { $message, $validator, ...$rest } = isValidatorObject(v)\r\n        ? v\r\n        : { $validator: v, $message: undefined };\r\n    const { $pending, $promise, $invalid, $error, $touch, } = buildValidationFunction(r, $validator, ref($message), handlers);\r\n    return {\r\n        $pending,\r\n        $error,\r\n        $promise,\r\n        $invalid,\r\n        $message,\r\n        $touch,\r\n        ...$rest,\r\n    };\r\n};\r\nconst buildValidation = (o, handlers) => {\r\n    const r = {};\r\n    const $value = isValidation(o) ? wrap(o.$value) : undefined;\r\n    for (const k of Object.keys(o)) {\r\n        if (k[0] === \"$\") {\r\n            if (k === \"$value\") {\r\n                r[k] = $value;\r\n                const $dirty = ref(false);\r\n                let dirtyWatch = NO_OP;\r\n                const createDirtyWatcher = () => {\r\n                    dirtyWatch();\r\n                    dirtyWatch = watch($value, () => {\r\n                        $dirty.value = true;\r\n                        dirtyWatch();\r\n                    }, { immediate: false, deep: true });\r\n                };\r\n                createDirtyWatcher();\r\n                r[\"$dirty\"] = $dirty;\r\n                r[\"$reset\"] = () => {\r\n                    $dirty.value = false;\r\n                    createDirtyWatcher();\r\n                };\r\n                r[\"$touch\"] = () => ($dirty.value = true);\r\n                // @ts-ignore\r\n                r.toObject = () => unwrap($value);\r\n                continue;\r\n            }\r\n            else {\r\n                r[k] = o[k];\r\n                continue;\r\n            }\r\n        }\r\n        if ($value) {\r\n            const validation = buildValidationValue($value, o[k], handlers);\r\n            // @ts-expect-error no valid type\r\n            r[k] = validation;\r\n        }\r\n        else {\r\n            const validation = buildValidation(o[k], handlers);\r\n            let $anyDirty = undefined;\r\n            let $errors;\r\n            let $anyInvalid;\r\n            let toObject = NO_OP;\r\n            if (isValidation(validation)) {\r\n                const validations = Object.keys(validation)\r\n                    .filter((x) => x[0] !== \"$\")\r\n                    .map((x) => validation[x]);\r\n                $errors = computed(() => validations\r\n                    .map((x) => x.$error)\r\n                    .map((x) => unwrap(x))\r\n                    .filter((x) => x !== undefined));\r\n                // $anyDirty = computed(() => validations.some(x => !!x));\r\n                $anyInvalid = computed(() => validations.some((x) => {\r\n                    return !!unwrap(x.$invalid);\r\n                }));\r\n                toObject = () => {\r\n                    return Object.keys(validation)\r\n                        .filter((x) => x[0] !== \"$\")\r\n                        .reduce((p, c) => {\r\n                        //@ts-ignore\r\n                        p[c] = validation[c].toObject();\r\n                        return p;\r\n                    }, {});\r\n                };\r\n            }\r\n            else {\r\n                const validations = Object.keys(validation).map((x) => validation[x]);\r\n                $errors = computed(() => {\r\n                    return validations\r\n                        .map((x) => unwrap(x.$errors))\r\n                        .filter((x) => x !== undefined)\r\n                        .filter((x) => {\r\n                        return x.some(Boolean);\r\n                    });\r\n                });\r\n                $anyDirty = computed(() => {\r\n                    return validations.some((x) => {\r\n                        return (unwrap(x.$anyDirty) ||\r\n                            (isBoolean(unwrap(x.$dirty)) &&\r\n                                unwrap(x.$dirty)));\r\n                    });\r\n                });\r\n                $anyInvalid = computed(() => validations.some((x) => {\r\n                    return !!unwrap(x.$anyInvalid);\r\n                }));\r\n                toObject = () => {\r\n                    return Object.keys(validation)\r\n                        .filter((x) => x[0] !== \"$\")\r\n                        .reduce((p, c) => {\r\n                        //@ts-ignore\r\n                        p[c] = validation[c].toObject();\r\n                        return p;\r\n                    }, {});\r\n                };\r\n            }\r\n            r[k] = {\r\n                toObject,\r\n                ...validation,\r\n                $errors,\r\n                $anyInvalid,\r\n            };\r\n            if ($anyDirty) {\r\n                r[k].$anyDirty = $anyDirty;\r\n                const keys = Object.keys(r[k]).filter((x) => x[0] !== \"$\" && isObject(r[k][x]));\r\n                r[k].$touch = () => {\r\n                    // r[k].\r\n                    keys.forEach((m) => {\r\n                        const touch = r[k][m].$touch;\r\n                        if (touch) {\r\n                            touch();\r\n                        }\r\n                    });\r\n                };\r\n                r[k].$reset = () => {\r\n                    keys.forEach((m) => {\r\n                        const reset = r[k][m].$reset;\r\n                        if (reset) {\r\n                            reset();\r\n                        }\r\n                    });\r\n                };\r\n            }\r\n        }\r\n    }\r\n    return r;\r\n};\r\nfunction useValidation(input) {\r\n    const handlers = [];\r\n    const validation = buildValidation({ input }, handlers);\r\n    // convert to reactive, this will make it annoying to deconstruct, but\r\n    // allows to use it directly on the render template without `.value`\r\n    // https://github.com/vuejs/vue-next/pull/738\r\n    // @ts-expect-error TODO check this error\r\n    const validationInput = reactive(validation.input);\r\n    // set the context, this will allow to use this object as the second\r\n    // argument when calling validators\r\n    handlers.forEach((x) => x(validationInput));\r\n    return validationInput;\r\n}\n\n// istanbul ignore next\r\n// Symbol used to inject/provide the i18n values\r\nconst I18n_ACCESS_SYMBOL = Symbol(((process.env.NODE_ENV !== 'production') && \"I18n\") || ``);\r\nfunction useI18n(definition) {\r\n    if (definition) {\r\n        return setI18n(definition);\r\n    }\r\n    else\r\n        return inject(I18n_ACCESS_SYMBOL);\r\n}\r\n/**\r\n * Builds i18n object based on the definition\r\n * @param definition - i18n definition\r\n */\r\nfunction buildI18n(definition) {\r\n    const locales = ref(Object.keys(definition.messages));\r\n    const localeMessages = ref(definition.messages);\r\n    const locale = ref(definition.locale);\r\n    const i18n = ref({});\r\n    let fallback = ref();\r\n    const cache = {};\r\n    const retrieveLocaleValue = (x) => {\r\n        return (\"__esModule\" in x || x[Symbol.toStringTag] === \"Module\") &&\r\n            \"default\" in x\r\n            ? x.default\r\n            : x;\r\n    };\r\n    const loadLocale = (locale, messages) => {\r\n        if (cache[locale]) {\r\n            return cache[locale];\r\n        }\r\n        const l = messages.value[locale];\r\n        if (!l) {\r\n            return ref({});\r\n        }\r\n        let m = isFunction(l) ? l() : l;\r\n        if (isPromise(m)) {\r\n            return m.then((x) => {\r\n                return (cache[locale] = wrap(retrieveLocaleValue(x)));\r\n            });\r\n        }\r\n        // if it was function we don't keep track on that\r\n        if (isFunction(l)) {\r\n            // return wrap(m)\r\n            return wrap(retrieveLocaleValue(m));\r\n        }\r\n        return (cache[locale] = computed(() => retrieveLocaleValue(messages.value[locale])));\r\n    };\r\n    const shouldFallback = definition.fallback\r\n        ? isBoolean(definition.notFoundFallback)\r\n            ? definition.notFoundFallback\r\n            : true\r\n        : false;\r\n    let fallbackIsPromise = false;\r\n    if (shouldFallback) {\r\n        const fallbackI18n = loadLocale(definition.fallback, localeMessages);\r\n        if (isPromise(fallbackI18n)) {\r\n            fallbackI18n.then((x) => {\r\n                fallback.value = x.value;\r\n            });\r\n            fallbackIsPromise = true;\r\n        }\r\n        else {\r\n            fallback.value = fallbackI18n.value;\r\n        }\r\n    }\r\n    else {\r\n        fallback.value = {};\r\n    }\r\n    const localeChangesCount = ref(0);\r\n    watch(localeMessages, () => localeChangesCount.value++, {\r\n        deep: true,\r\n        immediate: false,\r\n    });\r\n    watch([locale, fallback, localeChangesCount], ([l, fb, _]) => {\r\n        if (l === definition.fallback && shouldFallback) {\r\n            i18n.value = fb;\r\n        }\r\n        else {\r\n            const setI18n = (v) => (i18n.value = deepClone({}, fb, unwrap(v)));\r\n            // const localeMessage = await loadLocale(l as string, localeMessages);\r\n            // i18n.value = deepClone<any>({}, fb, localeMessage.value);\r\n            const r = loadLocale(l, localeMessages);\r\n            if (isPromise(r)) {\r\n                r.then(setI18n);\r\n            }\r\n            else {\r\n                setI18n(r);\r\n            }\r\n        }\r\n    }, {\r\n        immediate: !fallbackIsPromise,\r\n    });\r\n    const $t = (path, args) => {\r\n        if (definition.resolve) {\r\n            return wrap(definition.resolve(i18n.value, path, args));\r\n        }\r\n        return useFormat(usePath(i18n, path, \".\", (_, _1, p, _2) => p), args);\r\n    };\r\n    const $ts = (path, args) => {\r\n        return $t(path, args).value;\r\n    };\r\n    const addLocale = (l, m) => {\r\n        if (locales.value.indexOf(l) >= 0) {\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                console.warn(`[useI18n] Locale \"${l}\" already exists, overriding it...`);\r\n            }\r\n        }\r\n        else {\r\n            locales.value.push(l);\r\n        }\r\n        delete cache[l];\r\n        // istanbul ignore if\r\n        {\r\n            localeMessages.value[l] = m;\r\n        }\r\n    };\r\n    const removeLocale = (l) => {\r\n        const index = locales.value.indexOf(l);\r\n        if (index >= 0) {\r\n            const nextLocale = [\r\n                locale.value,\r\n                fallback.value && definition.fallback,\r\n                ...locales.value,\r\n            ].find((x) => x && x !== l);\r\n            if (nextLocale) {\r\n                if (l === definition.fallback) {\r\n                    /* istanbul ignore else */\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        console.warn(`[useI18n] removing default fallback locale \"${l}\"`);\r\n                    }\r\n                    fallback.value = undefined;\r\n                }\r\n                if (l === locale.value) {\r\n                    /* istanbul ignore else */\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        console.warn(`[useI18n] removing current locale \"${l}\", setting current locale to \"${nextLocale}\"`);\r\n                    }\r\n                    locale.value = nextLocale;\r\n                }\r\n            }\r\n            else {\r\n                /* istanbul ignore else */\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    console.error(\"[useI18n] No locales available to use\");\r\n                }\r\n            }\r\n            locales.value.splice(index, 1);\r\n        }\r\n        else {\r\n            /* istanbul ignore else */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                console.warn(`[useI18n] Locale \"${l}\" doesn't exist`);\r\n            }\r\n        }\r\n        // istanbul ignore else\r\n        {\r\n            delete localeMessages.value[l];\r\n        }\r\n        delete cache[l];\r\n    };\r\n    return {\r\n        locale,\r\n        locales,\r\n        i18n,\r\n        $t,\r\n        $ts,\r\n        addLocale,\r\n        removeLocale,\r\n    };\r\n}\r\n/**\r\n * Build and provide i18n definition\r\n * @param definition - I18N definition\r\n */\r\nfunction setI18n(definition) {\r\n    const r = buildI18n(definition);\r\n    provide(I18n_ACCESS_SYMBOL, r);\r\n    return r;\r\n}\n\n// istanbul ignore next\r\nconst SSR_TITLE_KEY = Symbol(((process.env.NODE_ENV !== 'production') && \"SSR_TITLE_KEY\") || ``);\r\nfunction provideSSRTitle(app, title) {\r\n    const r = wrap(title === undefined ? \"\" : title);\r\n    app.provide(SSR_TITLE_KEY, r);\r\n    return r;\r\n}\r\nfunction useSSRTitle(defaultTitle) {\r\n    const s = Symbol();\r\n    const title = inject(SSR_TITLE_KEY, s);\r\n    // @ts-ignore check if it exists\r\n    if (title === s) {\r\n        /* istanbul ignore else */\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(\"[useSSRTitle] can't find SSRTitle have you forgotten calling `provideSSRTitle`?\");\r\n        }\r\n        // istanbul ignore next\r\n        return ref(isString(defaultTitle) ? defaultTitle : \"\");\r\n    }\r\n    if (title === undefined) {\r\n        // probably not in `setup()`\r\n        // istanbul ignore next\r\n        return ref(isString(defaultTitle) ? defaultTitle : \"\");\r\n    }\r\n    if (isString(defaultTitle)) {\r\n        title.value = defaultTitle;\r\n    }\r\n    return title;\r\n}\r\nfunction useTitle(overrideTitle = null) {\r\n    if (((globalThis.import ? globalThis.import.meta.env.SSR : process.env.SSR )) && !isClient) {\r\n        return useSSRTitle(overrideTitle);\r\n    }\r\n    const title = ref(isString(overrideTitle) ? overrideTitle : document.title);\r\n    const observer = new MutationObserver(m => {\r\n        title.value = m[0].target.textContent;\r\n    });\r\n    watch(title, (t, o) => {\r\n        if (isString(t) && t !== o) {\r\n            document.title = t;\r\n        }\r\n    }, {\r\n        immediate: true,\r\n        flush: \"sync\"\r\n    });\r\n    const titleElement = document.querySelector(\"title\");\r\n    observer.observe(titleElement, { childList: true });\r\n    onUnmounted(() => observer.disconnect());\r\n    return title;\r\n}\n\n// istanbul ignore next\r\nconst HYDRATION_KEY = Symbol(((process.env.NODE_ENV !== 'production') && \"VUE_COMPOSABLE_HYDRATION_KEY\") || ``);\r\nconst hydrationPlugin = {\r\n    // @ts-ignore\r\n    install(app) {\r\n        const hydrating = ref(true);\r\n        const h = readonly(hydrating);\r\n        {\r\n            // @ts-ignore\r\n            app._context.provides[HYDRATION_KEY] = h;\r\n            const appMount = app.mount;\r\n            app.mount = (...args) => {\r\n                const component = appMount(...args);\r\n                hydrating.value = false;\r\n                return component;\r\n            };\r\n        }\r\n    }\r\n};\r\nfunction useHydration() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const s = Symbol();\r\n        const r = inject(HYDRATION_KEY, s);\r\n        if (r === s) {\r\n            console.warn(\"[useHydration] no hydration found, did you forget to `app.use(HydrationPlugin)`?\");\r\n        }\r\n    }\r\n    return inject(HYDRATION_KEY, computed(() => false));\r\n}\n\nfunction useValueSync(main, args) {\r\n    const master = wrap(main);\r\n    const list = arguments.length === 2\r\n        ? isRef(arguments[1]) && isArray(arguments[1].value)\r\n            ? arguments[1]\r\n            : ref([wrap(arguments[1])])\r\n        : ref(Array.from(arguments)\r\n            .slice(1)\r\n            .map(x => wrap(x)));\r\n    list.value.forEach(x => {\r\n        x.value = master.value;\r\n    });\r\n    let lastLen = list.value.length;\r\n    watch([master, list], ([m, list]) => {\r\n        // value added set master\r\n        if (lastLen < list.length) {\r\n            list.forEach(x => {\r\n                if (x.value !== m) {\r\n                    x.value = m;\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        lastLen = list.length;\r\n        for (const v of list) {\r\n            if (v.value !== m) {\r\n                master.value = v.value;\r\n                return;\r\n            }\r\n        }\r\n    }, {\r\n        deep: true\r\n    });\r\n    watch(master, m => {\r\n        list.value.forEach(x => (x.value = m));\r\n    }, {\r\n        deep: true,\r\n        flush: \"sync\"\r\n    });\r\n    return list;\r\n}\n\nfunction useTimeline(value, options) {\r\n    const timeline = ref([]);\r\n    const clone = options && options.clone ? options.clone : (x) => x;\r\n    const maxLength = (options && options.maxLength) || MAX_ARRAY_SIZE;\r\n    watch(value, (_, o) => {\r\n        timeline.value.unshift({\r\n            item: clone(o),\r\n            date: new Date()\r\n        });\r\n        if (timeline.value.length > maxLength) {\r\n            timeline.value.pop();\r\n        }\r\n    }, {\r\n        immediate: false,\r\n        flush: \"sync\",\r\n        // allow options to override defaults\r\n        ...options\r\n    });\r\n    return readonly(timeline);\r\n}\n\nfunction useUndo(defaultValue, options) {\r\n    const current = wrap(defaultValue);\r\n    const timeline = ref([]);\r\n    const position = ref(0);\r\n    const maxLen = (options && options.maxLength) || MAX_ARRAY_SIZE;\r\n    const clone = (options && options.clone) || ((t) => t);\r\n    const prev = computed(() => {\r\n        // hide current\r\n        const p = position.value === 0 ? 1 : position.value;\r\n        return timeline.value.slice(p);\r\n    });\r\n    const next = computed(() => {\r\n        // hide current\r\n        const p = position.value === 0 ? 1 : 0;\r\n        return timeline.value.slice(p, position.value);\r\n    });\r\n    let addTimelineEvent = undefined;\r\n    if ((process.env.NODE_ENV !== 'production') && options && options.devtoolId) {\r\n        const layer = useDevtoolsTimelineLayer(`useUndo:${options.devtoolId}`, options.devtoolId, 0x32a2bf // TODO devtools fix color\r\n        );\r\n        addTimelineEvent = (time, data) => layer.addEvent({\r\n            time,\r\n            data: {\r\n                value: data,\r\n                prev: [...prev.value],\r\n                next: [...next.value],\r\n            },\r\n            meta: {\r\n                prev: [...prev.value],\r\n                next: [...next.value],\r\n            },\r\n        });\r\n    }\r\n    watch(current, (c) => {\r\n        if (timeline.value[position.value] === c) {\r\n            //ignore because is the same value\r\n            return;\r\n        }\r\n        // new value added\r\n        if (position.value > 0) {\r\n            const pos = position.value;\r\n            timeline.value.splice(0, pos);\r\n            // reset position\r\n            position.value = 0;\r\n        }\r\n        if (timeline.value.length > maxLen) {\r\n            timeline.value.pop();\r\n        }\r\n        const v = clone(c);\r\n        timeline.value.unshift(v);\r\n        if (addTimelineEvent) {\r\n            addTimelineEvent(Date.now(), c);\r\n        }\r\n    }, {\r\n        ...options,\r\n        immediate: true,\r\n        flush: \"sync\",\r\n    });\r\n    const undo = (step = 1) => jump(step);\r\n    const redo = (step = 1) => jump(-step);\r\n    const jump = (delta) => {\r\n        const s = Math.sign(delta) <= 0\r\n            ? Math.max(delta, -next.value.length)\r\n            : Math.min(delta, prev.value.length);\r\n        position.value += s;\r\n        current.value = timeline.value[position.value];\r\n        if (addTimelineEvent) {\r\n            addTimelineEvent(Date.now(), clone(current.value));\r\n        }\r\n    };\r\n    return {\r\n        value: current,\r\n        undo,\r\n        redo,\r\n        jump,\r\n        prev,\r\n        next,\r\n    };\r\n}\n\nfunction useMouseDistanceFromElement(el, options, wait) {\r\n    let distance = undefined;\r\n    let remove = NO_OP;\r\n    if (isClient) {\r\n        // @ts-ignore\r\n        const { pageX, pageY, remove: removeMouseEvent } = useOnMouseMove(window, options, wait);\r\n        distance = computed(() => {\r\n            const elem = unwrap(el);\r\n            if (!elem)\r\n                return 0;\r\n            return Math.floor(Math.sqrt(Math.pow(pageX.value - (elem.offsetLeft + elem.clientWidth / 2), 2) +\r\n                Math.pow(pageY.value - (elem.offsetTop + elem.clientHeight / 2), 2)));\r\n        });\r\n        remove = removeMouseEvent;\r\n    }\r\n    else {\r\n        distance = computed(() => -1);\r\n    }\r\n    return {\r\n        distance,\r\n        remove,\r\n    };\r\n}\n\nconst VERSION = \"1.0.0-beta.24\";\r\n// istanbul ignore next\r\nconst VUE_VERSION = \"3\";\r\nconst COMMIT = \"cca1e18\";\n\nexport { COMMIT, FALSE_OP, MAX_ARRAY_SIZE, NO_OP, PASSIVE_EV, SCROLL_LOCK_CLASS, UseDevtoolsApp, VERSION, VUE_VERSION, VueComposableDevtools, buildI18n, debounce, deepClone, exponentialDelay, exposeWorker, getCssVariableFor, getDevtools, hydrationPlugin, injectFactory, isArray, isBoolean, isClient, isDate, isElement, isFunction, isNull, isNumber, isObject, isPromise, isString, isSymbol, isUndefined, minMax, noDelay, promisedTimeout, provideSSRTitle, refDebounced, refShared, setBreakpointTailwindCSS, setCssVariableFor, setDevtools, setI18n, storageAvailable, unwrap, useArrayPagination, useBreakpoint, useBreakpointChrome, useBreakpointTailwindCSS, useBroadcastChannel, useCancellablePromise, useClipboard, useCssVariables, useCurrencyFormat, useDateNow, useDebounce, useDevtoolsComponentState, useDevtoolsInspector, useDevtoolsTimelineLayer, useEvent, useFetch, useFormat, useGeolocation, useHydration, useI18n, useIntersectionObserver, useInterval, useIntlDateTimeFormat, useIntlNumberFormat, useLanguage, useLocalStorage, useLockScroll, useMatchMedia, useMouseDistanceFromElement, useNetworkInformation, useNow, useOnMouseMove, useOnOutsidePress, useOnResize, useOnScroll, useOnline, usePageVisibility, usePagination, usePath, usePerformanceNow, usePromise, usePromiseLazy, useRetry, useSSRTitle, useSessionStorage, useShare, useSharedRef, useStorage, useTimeline, useTimeout, useTitle, useUndo, useVModel, useValidation, useValueSync, useWebSocket, useWebStorage, useWorker, useWorkerFunction, wrap };\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.2\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    //Add additional init from store\r\n  baseURL: 'https://jsonplaceholder.typicode.com/',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n  },\r\n});","import Api from './Api';\r\nexport default {\r\n  async getAll() {\r\n    const response = await Api.get('/posts');\r\n    return response.data;;\r\n  },\r\n};","import { render } from \"./AboutView.vue?vue&type=template&id=3ac54319&ts=true\"\nimport script from \"./AboutView.vue?vue&type=script&lang=ts\"\nexport * from \"./AboutView.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","'use strict';\nvar $TypeError = TypeError;\n\nmodule.exports = function (passed, required) {\n  if (passed < required) throw new $TypeError('Not enough arguments');\n  return passed;\n};\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2&b=3');\n\nparams['delete']('a', 1);\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nparams['delete']('b', undefined);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar getAll = uncurryThis(URLSearchParamsPrototype.getAll);\nvar $has = uncurryThis(URLSearchParamsPrototype.has);\nvar params = new $URLSearchParams('a=1');\n\n// `undefined` case is a Chromium 117 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=14222\nif (params.has('a', 2) || !params.has('a', undefined)) {\n  defineBuiltIn(URLSearchParamsPrototype, 'has', function has(name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $has(this, name);\n    var values = getAll(this, name); // also validates `this`\n    validateArgumentsLength(length, 1);\n    var value = toString($value);\n    var index = 0;\n    while (index < values.length) {\n      if (values[index++] === value) return true;\n    } return false;\n  }, { enumerable: true, unsafe: true });\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\n\nvar URLSearchParamsPrototype = URLSearchParams.prototype;\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\n\n// `URLSearchParams.prototype.size` getter\n// https://github.com/whatwg/url/pull/734\nif (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {\n  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {\n    get: function size() {\n      var count = 0;\n      forEach(this, function () { count++; });\n      return count;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n"],"names":["_hoisted_1","class","_hoisted_2","_createElementVNode","render","_ctx","_cache","$props","$setup","$data","$options","_component_BackButton","_resolveComponent","_openBlock","_createElementBlock","_createVNode","_createTextVNode","_toDisplayString","result","Array","isArray","isBoolean","val","isObject","promisedTimeout","timeout","Promise","res","setTimeout","usePromise","fn","lazyOptions","Error","lazy","throwException","loading","ref","error","promise","exec","async","args","value","throwExp","length","currentPromise","r","er","toRaw","undefined","apiProxyFactory","pushEventsToApi","api","EventQueue","ApiQueue","priority","k","it","filter","x","type","Set","map","forEach","notifyComponentUpdate","on","promiseApi","onProxy","Proxy","get","target","prop","push","proxy","then","Symbol","bind","thisArg","apply","arguments","toString","Object","prototype","getPrototypeOf","kindOf","cache","thing","str","call","slice","toLowerCase","create","kindOfTest","typeOfTest","isUndefined","isBuffer","constructor","isFunction","isArrayBuffer","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isPlainObject","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isStream","pipe","isFormData","kind","FormData","append","isURLSearchParams","trim","replace","obj","allOwnKeys","i","l","keys","getOwnPropertyNames","len","key","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","merge","caseless","this","assignValue","targetKey","extend","a","b","stripBOM","content","charCodeAt","inherits","superConstructor","props","descriptors","defineProperty","assign","toFlatObject","sourceObj","destObj","propFilter","merged","endsWith","searchString","position","String","lastIndex","indexOf","toArray","arr","isTypedArray","TypedArray","Uint8Array","forEachEntry","generator","next","done","pair","matchAll","regExp","matches","isHTMLForm","toCamelCase","m","p1","p2","toUpperCase","hasOwnProperty","isRegExp","reduceDescriptors","reducer","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","ret","defineProperties","freezeMethods","enumerable","writable","set","toObjectSet","arrayOrString","delimiter","define","split","noop","toFiniteNumber","defaultValue","Number","isFinite","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","generateString","size","alphabet","Math","random","isSpecCompliantForm","toJSONObject","stack","visit","source","reducedValue","isAsyncFn","isThenable","catch","hasOwnProp","AxiosError","message","code","config","request","response","captureStackTrace","utils","toJSON","description","number","fileName","lineNumber","columnNumber","status","from","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","concat","token","join","isFlatArray","some","predicates","test","toFormData","formData","options","TypeError","PlatformFormData","metaTokens","indexes","option","visitor","defaultVisitor","_Blob","Blob","useBlob","convertValue","toISOString","Buffer","JSON","stringify","el","index","exposedHelpers","build","pop","encode","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","encoder","_encode","buildURL","url","serializeFn","serialize","serializedParams","hashmarkIndex","InterceptorManager","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","URLSearchParams","isBrowser","classes","protocols","hasBrowserEnv","document","hasStandardBrowserEnv","product","navigator","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","platform","toURLEncodedForm","data","helpers","isNode","parsePropPath","arrayToObject","formDataToJSON","buildPath","isNumericKey","isLast","entries","stringifySafely","rawValue","parser","parse","e","defaults","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","formSerializer","_FormData","env","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","rawHeaders","parsed","line","substring","$internals","normalizeHeader","header","normalizeValue","parseTokens","tokens","tokensRE","isValidHeaderName","matchHeaderValue","isHeaderNameFilter","formatHeader","w","char","buildAccessors","accessorName","methodName","arg1","arg2","arg3","configurable","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","parseHeaders","has","matcher","delete","deleted","deleteHeader","normalize","format","normalized","targets","asStrings","first","computed","accessor","internals","accessors","defineAccessor","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","resolve","reject","ERR_BAD_REQUEST","floor","write","expires","domain","secure","cookie","Date","toGMTString","read","RegExp","decodeURIComponent","remove","now","isAbsoluteURL","combineURLs","baseURL","relativeURL","buildFullPath","requestedURL","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","parseProtocol","speedometer","samplesCount","min","bytes","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","round","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","loaded","total","lengthComputable","progressBytes","rate","inRange","progress","estimated","event","isXHRAdapterSupported","XMLHttpRequest","requestData","requestHeaders","onCanceled","withXSRFToken","cancelToken","unsubscribe","signal","removeEventListener","Boolean","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","statusText","err","open","paramsSerializer","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","isURLSameOrigin","xsrfValue","cookies","setRequestHeader","withCredentials","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","send","knownAdapters","http","httpAdapter","xhr","xhrAdapter","renderReason","reason","isResolvedHandle","getAdapter","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","throwIfCancellationRequested","throwIfRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators","deprecatedWarnings","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","opt","validator","ERR_BAD_OPTION","version","formatMessage","desc","opts","ERR_DEPRECATED","console","warn","Axios","instanceConfig","interceptors","configOrUrl","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","c","spread","callback","isAxiosError","payload","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","createInstance","defaultConfig","instance","axios","Cancel","all","promises","formToJSON","default","getAll","Api","defineComponent","setup","PostService","posts","log","components","BackButton","__exports__","$TypeError","module","exports","required","defineBuiltIn","uncurryThis","validateArgumentsLength","$URLSearchParams","URLSearchParamsPrototype","$delete","$value","v","entry","dindex","found","entriesLength","unsafe","$has","values","DESCRIPTORS","defineBuiltInAccessor","count"],"sourceRoot":""}